#line 1 "DumpShaderDefinesAsCommentedCode"
// #define __SHADER_TARGET_MAJOR 5

#line 2 "DumpShaderDefinesAsCommentedCode"
// #define __SHADER_TARGET_MINOR 0

#line 3 "DumpShaderDefinesAsCommentedCode"
// #define ALLOW_STATIC_LIGHTING 1

#line 4 "DumpShaderDefinesAsCommentedCode"
// #define ALWAYS_EVALUATE_WORLD_POSITION_OFFSET 0

#line 5 "DumpShaderDefinesAsCommentedCode"
// #define AMPLIFICATIONSHADER 0

#line 6 "DumpShaderDefinesAsCommentedCode"
// #define CLEAR_COAT_BOTTOM_NORMAL 0

#line 7 "DumpShaderDefinesAsCommentedCode"
// #define COMPILE_SHADERS_FOR_DEVELOPMENT 1

#line 8 "DumpShaderDefinesAsCommentedCode"
// #define COMPILER_DEFINE #define

#line 9 "DumpShaderDefinesAsCommentedCode"
// #define COMPILER_DXC 0

#line 10 "DumpShaderDefinesAsCommentedCode"
// #define COMPUTESHADER 0

#line 11 "DumpShaderDefinesAsCommentedCode"
// #define DISTORTION_ACCOUNT_FOR_COVERAGE 0

#line 12 "DumpShaderDefinesAsCommentedCode"
// #define DO_CHECK 1

#line 13 "DumpShaderDefinesAsCommentedCode"
// #define DO_GUARD_SLOW 0

#line 14 "DumpShaderDefinesAsCommentedCode"
// #define DUAL_SOURCE_COLOR_BLENDING_ENABLED 0

#line 15 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_LODColoration 11

#line 16 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_MaterialTextureScaleAccuracy 7

#line 17 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_MeshUVDensityAccuracy 6

#line 18 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_None 0

#line 19 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_OutputMaterialTextureScales 8

#line 20 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_PrimitiveDistanceAccuracy 5

#line 21 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_QuadComplexity 4

#line 22 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_RequiredTextureResolution 9

#line 23 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_ShaderComplexity 1

#line 24 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_ShaderComplexityBleedingQuadOverhead 3

#line 25 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_ShaderComplexityContainedQuadOverhead 2

#line 26 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_VirtualTexturePendingMips 10

#line 27 "DumpShaderDefinesAsCommentedCode"
// #define DVSM_VisualizeGPUSkinCache 12

#line 28 "DumpShaderDefinesAsCommentedCode"
// #define DXT5_NORMALMAPS 0

#line 29 "DumpShaderDefinesAsCommentedCode"
// #define EARLY_Z_PASS_ONLY_MATERIAL_MASKING 0

#line 30 "DumpShaderDefinesAsCommentedCode"
// #define FORWARD_SHADING 1

#line 31 "DumpShaderDefinesAsCommentedCode"
// #define GBUFFER_HAS_DIFFUSE_SAMPLE_OCCLUSION 0

#line 32 "DumpShaderDefinesAsCommentedCode"
// #define GBUFFER_HAS_VELOCITY 0

#line 33 "DumpShaderDefinesAsCommentedCode"
// #define GBUFFER_REFACTOR 1

#line 34 "DumpShaderDefinesAsCommentedCode"
// #define GENERATE_SPHERICAL_PARTICLE_NORMALS 0

#line 35 "DumpShaderDefinesAsCommentedCode"
// #define GEOMETRYSHADER 0

#line 36 "DumpShaderDefinesAsCommentedCode"
// #define HAS_INVERTED_Z_BUFFER 1

#line 37 "DumpShaderDefinesAsCommentedCode"
// #define HAS_PRIMITIVE_UNIFORM_BUFFER 1

#line 38 "DumpShaderDefinesAsCommentedCode"
// #define INITIAL_GPU_SCALE 256

#line 39 "DumpShaderDefinesAsCommentedCode"
// #define INSTANCED_STEREO 1

#line 40 "DumpShaderDefinesAsCommentedCode"
// #define INTERPOLATE_VERTEX_COLOR 0

#line 41 "DumpShaderDefinesAsCommentedCode"
// #define IRIS_NORMAL 0

#line 42 "DumpShaderDefinesAsCommentedCode"
// #define IS_MATERIAL_SHADER 1

#line 43 "DumpShaderDefinesAsCommentedCode"
// #define LEGACY_MATERIAL_ENERGYCONSERVATION 0

#line 44 "DumpShaderDefinesAsCommentedCode"
// #define MANUAL_VERTEX_FETCH 1

#line 45 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ALLOW_NEGATIVE_EMISSIVECOLOR 0

#line 46 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_COMPUTE_FOG_PER_PIXEL 0

#line 47 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_CONTACT_SHADOWS 0

#line 48 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_DECAL_READ_MASK 7

#line 49 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_DITHER_OPACITY_MASK 0

#line 50 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_DOMAIN_POSTPROCESS 1

#line 51 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ENABLE_TRANSLUCENCY_CLOUD_FOGGING 0

#line 52 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ENABLE_TRANSLUCENCY_FOGGING 1

#line 53 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_FORWARD_BLENDS_SKYLIGHT_CUBEMAPS 0

#line 54 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_FULLY_ROUGH 0

#line 55 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_HQ_FORWARD_REFLECTION_CAPTURES 0

#line 56 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_IS_SKY 0

#line 57 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_IS_STRATA 0

#line 58 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ISTHINSURFACE 0

#line 59 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_NONMETAL 1

#line 60 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_NORMAL_CURVATURE_TO_ROUGHNESS 0

#line 61 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_OUTPUT_OPACITY_AS_ALPHA 0

#line 62 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_PATH_TRACING_BUFFER_READ 0

#line 63 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_PLANAR_FORWARD_REFLECTIONS 0

#line 64 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ROUGHDIFFUSE 0

#line 65 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_SHADINGMODEL_UNLIT 1

#line 66 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_SINGLE_SHADINGMODEL 1

#line 67 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_SKY_ATMOSPHERE 0

#line 68 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_SSR 0

#line 69 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_TANGENTSPACENORMAL 1

#line 70 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_TWOSIDED 0

#line 71 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USE_ALPHA_TO_COVERAGE 0

#line 72 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USE_LM_DIRECTIONALITY 1

#line 73 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USE_PREINTEGRATED_GF 0

#line 74 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USES_ANISOTROPY 0

#line 75 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USES_DECAL_LOOKUP 0

#line 76 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USES_SCENE_COLOR_COPY 0

#line 77 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_VIRTUALTEXTURE_FEEDBACK 0

#line 78 "DumpShaderDefinesAsCommentedCode"
// #define MATERIALBLENDING_SOLID 1

#line 79 "DumpShaderDefinesAsCommentedCode"
// #define MATERIALDECALRESPONSEMASK 7

#line 80 "DumpShaderDefinesAsCommentedCode"
// #define MATERIALDOMAIN_POSTPROCESS 1

#line 81 "DumpShaderDefinesAsCommentedCode"
// #define MAX_NUM_TEX_COORD 4

#line 82 "DumpShaderDefinesAsCommentedCode"
// #define MAX_NUM_TEXTURE_REGISTER 256

#line 83 "DumpShaderDefinesAsCommentedCode"
// #define MESHSHADER 0

#line 84 "DumpShaderDefinesAsCommentedCode"
// #define MOBILE_HIGH_QUALITY_BRDF 0

#line 85 "DumpShaderDefinesAsCommentedCode"
// #define MOBILE_MULTI_VIEW 0

#line 86 "DumpShaderDefinesAsCommentedCode"
// #define MULTI_VIEW 1

#line 87 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_INSTANCE_LOCAL_TO_WORLD_PS 0

#line 88 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_INSTANCE_WORLD_TO_LOCAL_PS 0

#line 89 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_PARTICLE_COLOR 0

#line 90 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_PARTICLE_LOCAL_TO_WORLD 0

#line 91 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_PARTICLE_WORLD_TO_LOCAL 0

#line 92 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_SCENE_TEXTURES 1

#line 93 "DumpShaderDefinesAsCommentedCode"
// #define NUM_VIRTUALTEXTURE_SAMPLES 0

#line 94 "DumpShaderDefinesAsCommentedCode"
// #define OUTPUT_QUAD_OVERDRAW 1

#line 95 "DumpShaderDefinesAsCommentedCode"
// #define PIXELSHADER 1

#line 96 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_ALLOW_SCENE_DATA_COMPRESSED_TRANSFORMS 1

#line 97 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_BINDLESS 0

#line 98 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_BUFFER_LOAD_TYPE_CONVERSION 1

#line 99 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_CLIP_DISTANCE 1

#line 100 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_DISTANCE_FIELDS 1

#line 101 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_MESH_SHADERS_TIER0 0

#line 102 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_MESH_SHADERS_TIER1 0

#line 103 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_PER_PIXEL_DBUFFER_MASK 0

#line 104 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_RENDERTARGET_WRITE_MASK 0

#line 105 "DumpShaderDefinesAsCommentedCode"
// #define POST_PROCESS_ALPHA 0

#line 106 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_ALLOW_GLOBAL_CLIP_PLANE 0

#line 107 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_MOBILE_DISABLE_VERTEX_FOG 1

#line 108 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_OIT 0

#line 109 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_STRATA_BACKCOMPATIBILITY 0

#line 110 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_SUPPORT_SKY_ATMOSPHERE 1

#line 111 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_SUPPORT_SKY_ATMOSPHERE_AFFECTS_HEIGHFOG 0

#line 112 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_SUPPORTS_LUMEN 1

#line 113 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_VERTEX_FOGGING_FOR_OPAQUE 1

#line 114 "DumpShaderDefinesAsCommentedCode"
// #define QUAD_BUFFER_REGISTER u1

#line 115 "DumpShaderDefinesAsCommentedCode"
// #define RAY_TRACING_DYNAMIC_MESH_IN_LOCAL_SPACE 1

#line 116 "DumpShaderDefinesAsCommentedCode"
// #define RAYCALLABLESHADER 0

#line 117 "DumpShaderDefinesAsCommentedCode"
// #define RAYGENSHADER 0

#line 118 "DumpShaderDefinesAsCommentedCode"
// #define RAYHITGROUPSHADER 0

#line 119 "DumpShaderDefinesAsCommentedCode"
// #define RAYMISSSHADER 0

#line 120 "DumpShaderDefinesAsCommentedCode"
// #define REFRACTION_ROOT_NODE_OVERRIDES_DEFAULT 0

#line 121 "DumpShaderDefinesAsCommentedCode"
// #define REFRACTION_USE_NONE 1

#line 122 "DumpShaderDefinesAsCommentedCode"
// #define SCENE_TEXTURES_DISABLED 1

#line 123 "DumpShaderDefinesAsCommentedCode"
// #define SELECTIVE_BASEPASS_OUTPUTS 0

#line 124 "DumpShaderDefinesAsCommentedCode"
// #define SHADING_PATH_DEFERRED 1

#line 125 "DumpShaderDefinesAsCommentedCode"
// #define SM5_PROFILE 1

#line 126 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_ADVANCED_DEBUG_ENABLED 0

#line 127 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_ENABLED 0

#line 128 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_OPAQUE_ROUGH_REFRACTION_ENABLED 0

#line 129 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_PREMULTIPLIED_ALPHA_OPACITY_OVERRIDEN 0

#line 130 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_CLOUD_SHADOW_ON_FORWARD_LIT_TRANSLUCENT 0

#line 131 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_CLOUD_SHADOW_ON_SINGLE_LAYER_WATER 0

#line 132 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_GPUSKIN_PASSTHROUGH 0

#line 133 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_RECTLIGHT_ON_FORWARD_LIT_TRANSLUCENT 0

#line 134 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_VSM_FOWARD_QUALITY 0

#line 135 "DumpShaderDefinesAsCommentedCode"
// #define TEXTURE_SAMPLE_DEBUG 0

#line 136 "DumpShaderDefinesAsCommentedCode"
// #define TILE_RESOLUTION 32

#line 137 "DumpShaderDefinesAsCommentedCode"
// #define TRANSLUCENT_SHADOW_WITH_MASKED_OPACITY 0

#line 138 "DumpShaderDefinesAsCommentedCode"
// #define TRANSLUCENT_WRITING_FRONT_LAYER_TRANSPARENCY 0

#line 139 "DumpShaderDefinesAsCommentedCode"
// #define TRANSLUCENT_WRITING_VELOCITY 0

#line 140 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE 2097152.00f

#line 141 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_FMOD_2PI 0.673652053f

#line 142 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_FMOD_PI 0.673652053f

#line 143 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_RCP 4.76837158e-07f

#line 144 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_RSQRT 0.000690533954f

#line 145 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_SQRT 1448.15466f

#line 146 "DumpShaderDefinesAsCommentedCode"
// #define UNDEFINED_ACCURACY 0.0149999997f

#line 147 "DumpShaderDefinesAsCommentedCode"
// #define USE_DBUFFER 1

#line 148 "DumpShaderDefinesAsCommentedCode"
// #define USE_DITHERED_LOD_TRANSITION_FROM_MATERIAL 0

#line 149 "DumpShaderDefinesAsCommentedCode"
// #define USE_STENCIL_LOD_DITHER_DEFAULT 0

#line 150 "DumpShaderDefinesAsCommentedCode"
// #define USES_DISPLACEMENT 0

#line 151 "DumpShaderDefinesAsCommentedCode"
// #define USES_DISTORTION 0

#line 152 "DumpShaderDefinesAsCommentedCode"
// #define USES_EMISSIVE_COLOR 1

#line 153 "DumpShaderDefinesAsCommentedCode"
// #define USES_PER_INSTANCE_CUSTOM_DATA 0

#line 154 "DumpShaderDefinesAsCommentedCode"
// #define USES_PER_INSTANCE_RANDOM 0

#line 155 "DumpShaderDefinesAsCommentedCode"
// #define USES_TRANSFORM_VECTOR 0

#line 156 "DumpShaderDefinesAsCommentedCode"
// #define USES_VERTEX_INTERPOLATOR 0

#line 157 "DumpShaderDefinesAsCommentedCode"
// #define USES_WORLD_POSITION_OFFSET 0

#line 158 "DumpShaderDefinesAsCommentedCode"
// #define VELOCITY_ENCODE_DEPTH 1

#line 159 "DumpShaderDefinesAsCommentedCode"
// #define VERTEXSHADER 0

#line 160 "DumpShaderDefinesAsCommentedCode"
// #define VF_SUPPORTS_PRIMITIVE_SCENE_DATA 1

#line 161 "DumpShaderDefinesAsCommentedCode"
// #define VF_SUPPORTS_SPEEDTREE_WIND 1

#line 162 "DumpShaderDefinesAsCommentedCode"
// #define VIRTUAL_TEXTURE_ANISOTROPIC_FILTERING 0

#line 163 "DumpShaderDefinesAsCommentedCode"
// #define WANT_PIXEL_DEPTH_OFFSET 0

#line 164 "DumpShaderDefinesAsCommentedCode"
// #define WORKING_COLOR_SPACE_IS_SRGB 1

#line 5 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCScalar
{
	float Tile;
	float Offset;
};

#line 11 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCVector2
{
	float2 Tile;
	float2 Offset;
};

#line 17 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCVector3
{
	float3 Tile;
	float3 Offset;
};

#line 23 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCVector4
{
	float4 Tile;
	float4 Offset;
};

#line 58 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCMatrix
{
	float4x4 M;
	float3 Tile; 
};

#line 65 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCInverseMatrix
{
	float4x4 M;
	float3 Tile; 
	int Dummy; 
};

#line 75 "/Engine/Private/LargeWorldCoordinates.ush"
float LWCGetTileOffset(FLWCScalar V) { return  (( V ).Tile) * 2097152.00f; }

#line 76 "/Engine/Private/LargeWorldCoordinates.ush"
float2 LWCGetTileOffset(FLWCVector2 V) { return  (( V ).Tile) * 2097152.00f; }

#line 77 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCGetTileOffset(FLWCVector3 V) { return  (( V ).Tile) * 2097152.00f; }

#line 78 "/Engine/Private/LargeWorldCoordinates.ush"
float4 LWCGetTileOffset(FLWCVector4 V) { return  (( V ).Tile) * 2097152.00f; }

#line 79 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCGetTileOffset(FLWCMatrix V) { return  (( V ).Tile) * 2097152.00f; }

#line 80 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCGetTileOffset(FLWCInverseMatrix V) { return  (( V ).Tile) * 2097152.00f; }

#line 93 "/Engine/Private/LargeWorldCoordinates.ush"
float4x4 MakeTranslationMatrix(float3 Offset)
{
	float4x4 Result;
	Result[0] = float4(1.0f, 0.0f, 0.0f, 0.0f);
	Result[1] = float4(0.0f, 1.0f, 0.0f, 0.0f);
	Result[2] = float4(0.0f, 0.0f, 1.0f, 0.0f);
	Result[3] = float4(Offset, 1.0f);
	return Result;
}

#line 103 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCScalar MakeLWCScalar(float Tile, float Offset)
{
	FLWCScalar Result;
	 ( Result ).Tile = ( Tile );
	Result.Offset = Offset;
	return Result;
}

#line 111 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector2 MakeLWCVector2(float2 Tile, float2 Offset)
{
	FLWCVector2 Result;
	 ( Result ).Tile = ( Tile );
	Result.Offset = Offset;
	return Result;
}

#line 119 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector3 MakeLWCVector3(float3 Tile, float3 Offset)
{
	FLWCVector3 Result;
	 ( Result ).Tile = ( Tile );
	Result.Offset = Offset;
	return Result;
}

#line 127 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector4(float4 Tile, float4 Offset)
{
	FLWCVector4 Result;
	 ( Result ).Tile = ( Tile );
	Result.Offset = Offset;
	return Result;
}

#line 135 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector4(float3 Tile, float4 Offset)
{
	return MakeLWCVector4(float4(Tile, 0), Offset);
}

#line 140 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector4(FLWCVector3 XYZ, float W)
{
	return MakeLWCVector4( (( XYZ ).Tile), float4(XYZ.Offset, W));
}

#line 161 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCMatrix MakeLWCMatrix(float3 Tile, float4x4 InMatrix)
{
	FLWCMatrix Result;
	 ( Result ).Tile = ( Tile );
	Result.M = InMatrix;
	return Result;
}

#line 177 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCInverseMatrix MakeLWCInverseMatrix(float3 Tile, float4x4 InMatrix)
{
	FLWCInverseMatrix Result;
	 ( Result ).Tile = ( -Tile );
	Result.M = InMatrix;
	Result.Dummy = 0;
	return Result;
}

#line 227 "/Engine/Private/LargeWorldCoordinates.ush"
float LWCToFloat(FLWCScalar Value)   { return LWCGetTileOffset(Value) + Value.Offset; }

#line 228 "/Engine/Private/LargeWorldCoordinates.ush"
float2 LWCToFloat(FLWCVector2 Value) { return LWCGetTileOffset(Value) + Value.Offset; }

#line 229 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCToFloat(FLWCVector3 Value) { return LWCGetTileOffset(Value) + Value.Offset; }

#line 230 "/Engine/Private/LargeWorldCoordinates.ush"
float4 LWCToFloat(FLWCVector4 Value) { return LWCGetTileOffset(Value) + Value.Offset; }

#line 232 "/Engine/Private/LargeWorldCoordinates.ush"
float4x4 LWCToFloat(FLWCMatrix Value)
{
	float4x4 Result = Value.M;
	Result[3].xyz = LWCGetTileOffset(Value) + Result[3].xyz;
	return Result;
}

#line 239 "/Engine/Private/LargeWorldCoordinates.ush"
float4x4 LWCToFloat(FLWCInverseMatrix Value)
{
	float4x4 TileOffset = MakeTranslationMatrix(LWCGetTileOffset(Value));
	return mul(TileOffset, Value.M);
}

#line 256 "/Engine/Private/LargeWorldCoordinates.ush"
float LWCToFloat(float Value) { return Value; }

#line 257 "/Engine/Private/LargeWorldCoordinates.ush"
float2 LWCToFloat(float2 Value) { return Value; }

#line 258 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCToFloat(float3 Value) { return Value; }

#line 259 "/Engine/Private/LargeWorldCoordinates.ush"
float4 LWCToFloat(float4 Value) { return Value; }

#line 260 "/Engine/Private/LargeWorldCoordinates.ush"
float4x4 LWCToFloat(float4x4 Value) { return Value; }

#line 56 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCSubtract(FLWCScalar Lhs, FLWCScalar Rhs) { return MakeLWCScalar( (( Lhs ).Tile) -  (( Rhs ).Tile), Lhs.Offset - Rhs.Offset); }

#line 57 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCSubtract(float Lhs, FLWCScalar Rhs) { return MakeLWCScalar(- (( Rhs ).Tile), Lhs - Rhs.Offset); }

#line 58 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCSubtract(FLWCScalar Lhs, float Rhs) { return MakeLWCScalar( (( Lhs ).Tile), Lhs.Offset - Rhs); }

#line 56 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCSubtract(FLWCVector2 Lhs, FLWCVector2 Rhs) { return MakeLWCVector2( (( Lhs ).Tile) -  (( Rhs ).Tile), Lhs.Offset - Rhs.Offset); }

#line 57 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCSubtract(float2 Lhs, FLWCVector2 Rhs) { return MakeLWCVector2(- (( Rhs ).Tile), Lhs - Rhs.Offset); }

#line 58 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCSubtract(FLWCVector2 Lhs, float2 Rhs) { return MakeLWCVector2( (( Lhs ).Tile), Lhs.Offset - Rhs); }

#line 56 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCSubtract(FLWCVector3 Lhs, FLWCVector3 Rhs) { return MakeLWCVector3( (( Lhs ).Tile) -  (( Rhs ).Tile), Lhs.Offset - Rhs.Offset); }

#line 57 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCSubtract(float3 Lhs, FLWCVector3 Rhs) { return MakeLWCVector3(- (( Rhs ).Tile), Lhs - Rhs.Offset); }

#line 58 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCSubtract(FLWCVector3 Lhs, float3 Rhs) { return MakeLWCVector3( (( Lhs ).Tile), Lhs.Offset - Rhs); }

#line 56 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCSubtract(FLWCVector4 Lhs, FLWCVector4 Rhs) { return MakeLWCVector4( (( Lhs ).Tile) -  (( Rhs ).Tile), Lhs.Offset - Rhs.Offset); }

#line 57 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCSubtract(float4 Lhs, FLWCVector4 Rhs) { return MakeLWCVector4(- (( Rhs ).Tile), Lhs - Rhs.Offset); }

#line 58 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCSubtract(FLWCVector4 Lhs, float4 Rhs) { return MakeLWCVector4( (( Lhs ).Tile), Lhs.Offset - Rhs); }

#line 3 "/Engine/Generated/UniformBuffers/View.ush"
cbuffer   View 
{
	 float4x4  View_TranslatedWorldToClip;
	 float4x4  View_RelativeWorldToClip;
	 float4x4  View_ClipToRelativeWorld;
	 float4x4  View_TranslatedWorldToView;
	 float4x4  View_ViewToTranslatedWorld;
	 float4x4  View_TranslatedWorldToCameraView;
	 float4x4  View_CameraViewToTranslatedWorld;
	 float4x4  View_ViewToClip;
	 float4x4  View_ViewToClipNoAA;
	 float4x4  View_ClipToView;
	 float4x4  View_ClipToTranslatedWorld;
	 float4x4  View_SVPositionToTranslatedWorld;
	 float4x4  View_ScreenToRelativeWorld;
	 float4x4  View_ScreenToTranslatedWorld;
	 float4x4  View_MobileMultiviewShadowTransform;
	 float3  View_ViewTilePosition;
	 float  PrePadding_View_972;
	 float3  View_MatrixTilePosition;
	 float  PrePadding_View_988;
	 float3  View_ViewForward;
	 float  PrePadding_View_1004;
	 float3  View_ViewUp;
	 float  PrePadding_View_1020;
	 float3  View_ViewRight;
	 float  PrePadding_View_1036;
	 float3  View_HMDViewNoRollUp;
	 float  PrePadding_View_1052;
	 float3  View_HMDViewNoRollRight;
	 float  PrePadding_View_1068;
	 float4  View_InvDeviceZToWorldZTransform;
	 float4  View_ScreenPositionScaleBias;
	 float3  View_RelativeWorldCameraOrigin;
	 float  PrePadding_View_1116;
	 float3  View_TranslatedWorldCameraOrigin;
	 float  PrePadding_View_1132;
	 float3  View_RelativeWorldViewOrigin;
	 float  PrePadding_View_1148;
	 float3  View_RelativePreViewTranslation;
	 float  PrePadding_View_1164;
	 float4x4  View_PrevViewToClip;
	 float4x4  View_PrevClipToView;
	 float4x4  View_PrevTranslatedWorldToClip;
	 float4x4  View_PrevTranslatedWorldToView;
	 float4x4  View_PrevViewToTranslatedWorld;
	 float4x4  View_PrevTranslatedWorldToCameraView;
	 float4x4  View_PrevCameraViewToTranslatedWorld;
	 float3  View_PrevTranslatedWorldCameraOrigin;
	 float  PrePadding_View_1628;
	 float3  View_PrevRelativeWorldCameraOrigin;
	 float  PrePadding_View_1644;
	 float3  View_PrevRelativeWorldViewOrigin;
	 float  PrePadding_View_1660;
	 float3  View_RelativePrevPreViewTranslation;
	 float  PrePadding_View_1676;
	 float4x4  View_PrevClipToRelativeWorld;
	 float4x4  View_PrevScreenToTranslatedWorld;
	 float4x4  View_ClipToPrevClip;
	 float4x4  View_ClipToPrevClipWithAA;
	 float4  View_TemporalAAJitter;
	 float4  View_GlobalClippingPlane;
	 float2  View_FieldOfViewWideAngles;
	 float2  View_PrevFieldOfViewWideAngles;
	 float4  View_ViewRectMin;
	 float4  View_ViewSizeAndInvSize;
	 uint4  View_ViewRectMinAndSize;
	 float4  View_LightProbeSizeRatioAndInvSizeRatio;
	 float4  View_BufferSizeAndInvSize;
	 float4  View_BufferBilinearUVMinMax;
	 float4  View_ScreenToViewSpace;
	 float2  View_BufferToSceneTextureScale;
	 float2  View_ResolutionFractionAndInv;
	 int  View_NumSceneColorMSAASamples;
	 float  View_ProjectionDepthThicknessScale;
	 float  View_PreExposure;
	 float  View_OneOverPreExposure;
	 float4  View_DiffuseOverrideParameter;
	 float4  View_SpecularOverrideParameter;
	 float4  View_NormalOverrideParameter;
	 float2  View_RoughnessOverrideParameter;
	 float  View_PrevFrameGameTime;
	 float  View_PrevFrameRealTime;
	 float  View_OutOfBoundsMask;
	 float  PrePadding_View_2196;
	 float  PrePadding_View_2200;
	 float  PrePadding_View_2204;
	 float3  View_WorldCameraMovementSinceLastFrame;
	 float  View_CullingSign;
	 float  View_NearPlane;
	 float  View_GameTime;
	 float  View_RealTime;
	 float  View_DeltaTime;
	 float  View_MaterialTextureMipBias;
	 float  View_MaterialTextureDerivativeMultiply;
	 uint  View_Random;
	 uint  View_FrameNumber;
	 uint  View_FrameCounter;
	 uint  View_StateFrameIndexMod8;
	 uint  View_StateFrameIndex;
	 uint  View_DebugViewModeMask;
	 uint  View_WorldIsPaused;
	 float  View_CameraCut;
	 float  View_UnlitViewmodeMask;
	 float  PrePadding_View_2284;
	 float4  View_DirectionalLightColor;
	 float3  View_DirectionalLightDirection;
	 float  PrePadding_View_2316;
	 float4  View_TranslucencyLightingVolumeMin[2];
	 float4  View_TranslucencyLightingVolumeInvSize[2];
	 float4  View_TemporalAAParams;
	 float4  View_CircleDOFParams;
	 float  View_DepthOfFieldSensorWidth;
	 float  View_DepthOfFieldFocalDistance;
	 float  View_DepthOfFieldScale;
	 float  View_DepthOfFieldFocalLength;
	 float  View_DepthOfFieldFocalRegion;
	 float  View_DepthOfFieldNearTransitionRegion;
	 float  View_DepthOfFieldFarTransitionRegion;
	 float  View_MotionBlurNormalizedToPixel;
	 float  View_GeneralPurposeTweak;
	 float  View_GeneralPurposeTweak2;
	 float  View_DemosaicVposOffset;
	 float  View_DecalDepthBias;
	 float3  View_IndirectLightingColorScale;
	 float  PrePadding_View_2476;
	 float3  View_PrecomputedIndirectLightingColorScale;
	 float  PrePadding_View_2492;
	 float3  View_PrecomputedIndirectSpecularColorScale;
	 float  PrePadding_View_2508;
	 float4  View_AtmosphereLightDirection[2];
	 float4  View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];
	 float4  View_AtmosphereLightIlluminanceOuterSpace[2];
	 float4  View_AtmosphereLightDiscLuminance[2];
	 float4  View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];
	 float4  View_SkyViewLutSizeAndInvSize;
	 float3  View_SkyCameraTranslatedWorldOrigin;
	 float  PrePadding_View_2700;
	 float4  View_SkyPlanetTranslatedWorldCenterAndViewHeight;
	 float4x4  View_SkyViewLutReferential;
	 float4  View_SkyAtmosphereSkyLuminanceFactor;
	 float  View_SkyAtmospherePresentInScene;
	 float  View_SkyAtmosphereHeightFogContribution;
	 float  View_SkyAtmosphereBottomRadiusKm;
	 float  View_SkyAtmosphereTopRadiusKm;
	 float4  View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;
	 float  View_SkyAtmosphereAerialPerspectiveStartDepthKm;
	 float  View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;
	 float  View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;
	 float  View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;
	 float  View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;
	 float  View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;
	 float  PrePadding_View_2856;
	 float  PrePadding_View_2860;
	 float3  View_NormalCurvatureToRoughnessScaleBias;
	 float  View_RenderingReflectionCaptureMask;
	 float  View_RealTimeReflectionCapture;
	 float  View_RealTimeReflectionCapturePreExposure;
	 float  PrePadding_View_2888;
	 float  PrePadding_View_2892;
	 float4  View_AmbientCubemapTint;
	 float  View_AmbientCubemapIntensity;
	 float  View_SkyLightApplyPrecomputedBentNormalShadowingFlag;
	 float  View_SkyLightAffectReflectionFlag;
	 float  View_SkyLightAffectGlobalIlluminationFlag;
	 float4  View_SkyLightColor;
	 float4  View_MobileSkyIrradianceEnvironmentMap[8];
	 float  View_MobilePreviewMode;
	 float  View_HMDEyePaddingOffset;
	 float  View_ReflectionCubemapMaxMip;
	 float  View_ShowDecalsMask;
	 uint  View_DistanceFieldAOSpecularOcclusionMode;
	 float  View_IndirectCapsuleSelfShadowingIntensity;
	 float  PrePadding_View_3096;
	 float  PrePadding_View_3100;
	 float3  View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;
	 int  View_StereoPassIndex;
	 float4  View_GlobalVolumeTranslatedCenterAndExtent[6];
	 float4  View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];
	 float4  View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];
	 float4  View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];
	 float  View_GlobalDistanceFieldMipFactor;
	 float  View_GlobalDistanceFieldMipTransition;
	 int  View_GlobalDistanceFieldClipmapSizeInPages;
	 int  PrePadding_View_3516;
	 float3  View_GlobalDistanceFieldInvPageAtlasSize;
	 float  PrePadding_View_3532;
	 float3  View_GlobalDistanceFieldInvCoverageAtlasSize;
	 float  View_GlobalVolumeDimension;
	 float  View_GlobalVolumeTexelSize;
	 float  View_MaxGlobalDFAOConeDistance;
	 uint  View_NumGlobalSDFClipmaps;
	 float  View_CoveredExpandSurfaceScale;
	 float  View_NotCoveredExpandSurfaceScale;
	 float  View_NotCoveredMinStepScale;
	 float  View_DitheredTransparencyStepThreshold;
	 float  View_DitheredTransparencyTraceThreshold;
	 int2  View_CursorPosition;
	 float  View_bCheckerboardSubsurfaceProfileRendering;
	 float  PrePadding_View_3596;
	 float3  View_VolumetricFogInvGridSize;
	 float  PrePadding_View_3612;
	 float3  View_VolumetricFogGridZParams;
	 float  PrePadding_View_3628;
	 float2  View_VolumetricFogSVPosToVolumeUV;
	 float2  View_VolumetricFogViewGridUVToPrevViewRectUV;
	 float2  View_VolumetricFogPrevViewGridRectUVToResourceUV;
	 float2  View_VolumetricFogPrevUVMax;
	 float2  View_VolumetricFogScreenToResourceUV;
	 float2  View_VolumetricFogUVMax;
	 float  View_VolumetricFogMaxDistance;
	 float  PrePadding_View_3684;
	 float  PrePadding_View_3688;
	 float  PrePadding_View_3692;
	 float3  View_VolumetricLightmapWorldToUVScale;
	 float  PrePadding_View_3708;
	 float3  View_VolumetricLightmapWorldToUVAdd;
	 float  PrePadding_View_3724;
	 float3  View_VolumetricLightmapIndirectionTextureSize;
	 float  View_VolumetricLightmapBrickSize;
	 float3  View_VolumetricLightmapBrickTexelSize;
	 float  View_IndirectLightingCacheShowFlag;
	 float  View_EyeToPixelSpreadAngle;
	 float  PrePadding_View_3764;
	 float  PrePadding_View_3768;
	 float  PrePadding_View_3772;
	 float4  View_XRPassthroughCameraUVs[2];
	 float  View_GlobalVirtualTextureMipBias;
	 uint  View_VirtualTextureFeedbackShift;
	 uint  View_VirtualTextureFeedbackMask;
	 uint  View_VirtualTextureFeedbackStride;
	 uint  View_VirtualTextureFeedbackJitterOffset;
	 uint  View_VirtualTextureFeedbackSampleOffset;
	 uint  PrePadding_View_3832;
	 uint  PrePadding_View_3836;
	 float4  View_RuntimeVirtualTextureMipLevel;
	 float2  View_RuntimeVirtualTexturePackHeight;
	 float  PrePadding_View_3864;
	 float  PrePadding_View_3868;
	 float4  View_RuntimeVirtualTextureDebugParams;
	 float  View_OverrideLandscapeLOD;
	 int  View_FarShadowStaticMeshLODBias;
	 float  View_MinRoughness;
	 float  PrePadding_View_3900;
	 float4  View_HairRenderInfo;
	 uint  View_EnableSkyLight;
	 uint  View_HairRenderInfoBits;
	 uint  View_HairComponents;
	 float  View_bSubsurfacePostprocessEnabled;
	 float4  View_SSProfilesTextureSizeAndInvSize;
	 float4  View_SSProfilesPreIntegratedTextureSizeAndInvSize;
	 float4  View_SpecularProfileTextureSizeAndInvSize;
	 float3  View_PhysicsFieldClipmapCenter;
	 float  View_PhysicsFieldClipmapDistance;
	 int  View_PhysicsFieldClipmapResolution;
	 int  View_PhysicsFieldClipmapExponent;
	 int  View_PhysicsFieldClipmapCount;
	 int  View_PhysicsFieldTargetCount;
	 int4  View_PhysicsFieldTargets[32];
	 uint  View_GPUSceneViewId;
	 float  View_ViewResolutionFraction;
	 float  View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;
	 float  PrePadding_View_4540;
	 float4  View_TanAndInvTanHalfFOV;
	 float4  View_PrevTanAndInvTanHalfFOV;
	 float4  View_GlintLUTParameters0;
	 float4  View_GlintLUTParameters1;
	 uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler ;
	 uint  PrePadding_View_4612;
	 uint BindlessSampler_View_MaterialTextureBilinearClampedSampler ;
	 uint  PrePadding_View_4620;
	 uint BindlessResource_View_VolumetricLightmapIndirectionTexture ;
	 uint  PrePadding_View_4628;
	 uint BindlessResource_View_VolumetricLightmapBrickAmbientVector ;
	 uint  PrePadding_View_4636;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0 ;
	 uint  PrePadding_View_4644;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1 ;
	 uint  PrePadding_View_4652;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2 ;
	 uint  PrePadding_View_4660;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3 ;
	 uint  PrePadding_View_4668;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4 ;
	 uint  PrePadding_View_4676;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5 ;
	 uint  PrePadding_View_4684;
	 uint BindlessResource_View_SkyBentNormalBrickTexture ;
	 uint  PrePadding_View_4692;
	 uint BindlessResource_View_DirectionalLightShadowingBrickTexture ;
	 uint  PrePadding_View_4700;
	 uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler ;
	 uint  PrePadding_View_4708;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler0 ;
	 uint  PrePadding_View_4716;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler1 ;
	 uint  PrePadding_View_4724;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler2 ;
	 uint  PrePadding_View_4732;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler3 ;
	 uint  PrePadding_View_4740;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler4 ;
	 uint  PrePadding_View_4748;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler5 ;
	 uint  PrePadding_View_4756;
	 uint BindlessSampler_View_SkyBentNormalTextureSampler ;
	 uint  PrePadding_View_4764;
	 uint BindlessSampler_View_DirectionalLightShadowingTextureSampler ;
	 uint  PrePadding_View_4772;
	 uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture ;
	 uint  PrePadding_View_4780;
	 uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture ;
	 uint  PrePadding_View_4788;
	 uint BindlessResource_View_GlobalDistanceFieldPageTableTexture ;
	 uint  PrePadding_View_4796;
	 uint BindlessResource_View_GlobalDistanceFieldMipTexture ;
	 uint  PrePadding_View_4804;
	 uint BindlessSampler_View_GlobalDistanceFieldPageAtlasTextureSampler ;
	 uint  PrePadding_View_4812;
	 uint BindlessSampler_View_GlobalDistanceFieldCoverageAtlasTextureSampler ;
	 uint  PrePadding_View_4820;
	 uint BindlessSampler_View_GlobalDistanceFieldMipTextureSampler ;
	 uint  PrePadding_View_4828;
	 uint BindlessResource_View_AtmosphereTransmittanceTexture ;
	 uint  PrePadding_View_4836;
	 uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler ;
	 uint  PrePadding_View_4844;
	 uint BindlessResource_View_AtmosphereIrradianceTexture ;
	 uint  PrePadding_View_4852;
	 uint BindlessSampler_View_AtmosphereIrradianceTextureSampler ;
	 uint  PrePadding_View_4860;
	 uint BindlessResource_View_AtmosphereInscatterTexture ;
	 uint  PrePadding_View_4868;
	 uint BindlessSampler_View_AtmosphereInscatterTextureSampler ;
	 uint  PrePadding_View_4876;
	 uint BindlessResource_View_PerlinNoiseGradientTexture ;
	 uint  PrePadding_View_4884;
	 uint BindlessSampler_View_PerlinNoiseGradientTextureSampler ;
	 uint  PrePadding_View_4892;
	 uint BindlessResource_View_PerlinNoise3DTexture ;
	 uint  PrePadding_View_4900;
	 uint BindlessSampler_View_PerlinNoise3DTextureSampler ;
	 uint  PrePadding_View_4908;
	 uint BindlessResource_View_SobolSamplingTexture ;
	 uint  PrePadding_View_4916;
	 uint BindlessSampler_View_SharedPointWrappedSampler ;
	 uint  PrePadding_View_4924;
	 uint BindlessSampler_View_SharedPointClampedSampler ;
	 uint  PrePadding_View_4932;
	 uint BindlessSampler_View_SharedBilinearWrappedSampler ;
	 uint  PrePadding_View_4940;
	 uint BindlessSampler_View_SharedBilinearClampedSampler ;
	 uint  PrePadding_View_4948;
	 uint BindlessSampler_View_SharedBilinearAnisoClampedSampler ;
	 uint  PrePadding_View_4956;
	 uint BindlessSampler_View_SharedTrilinearWrappedSampler ;
	 uint  PrePadding_View_4964;
	 uint BindlessSampler_View_SharedTrilinearClampedSampler ;
	 uint  PrePadding_View_4972;
	 uint BindlessResource_View_PreIntegratedBRDF ;
	 uint  PrePadding_View_4980;
	 uint BindlessSampler_View_PreIntegratedBRDFSampler ;
	 uint  PrePadding_View_4988;
	 uint BindlessResource_View_SkyIrradianceEnvironmentMap ;
	 uint  PrePadding_View_4996;
	 uint BindlessResource_View_TransmittanceLutTexture ;
	 uint  PrePadding_View_5004;
	 uint BindlessSampler_View_TransmittanceLutTextureSampler ;
	 uint  PrePadding_View_5012;
	 uint BindlessResource_View_SkyViewLutTexture ;
	 uint  PrePadding_View_5020;
	 uint BindlessSampler_View_SkyViewLutTextureSampler ;
	 uint  PrePadding_View_5028;
	 uint BindlessResource_View_DistantSkyLightLutTexture ;
	 uint  PrePadding_View_5036;
	 uint BindlessSampler_View_DistantSkyLightLutTextureSampler ;
	 uint  PrePadding_View_5044;
	 uint BindlessResource_View_CameraAerialPerspectiveVolume ;
	 uint  PrePadding_View_5052;
	 uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler ;
	 uint  PrePadding_View_5060;
	 uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly ;
	 uint  PrePadding_View_5068;
	 uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler ;
	 uint  PrePadding_View_5076;
	 uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly ;
	 uint  PrePadding_View_5084;
	 uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler ;
	 uint  PrePadding_View_5092;
	 uint BindlessResource_View_HairScatteringLUTTexture ;
	 uint  PrePadding_View_5100;
	 uint BindlessSampler_View_HairScatteringLUTSampler ;
	 uint  PrePadding_View_5108;
	 uint BindlessResource_View_GGXLTCMatTexture ;
	 uint  PrePadding_View_5116;
	 uint BindlessSampler_View_GGXLTCMatSampler ;
	 uint  PrePadding_View_5124;
	 uint BindlessResource_View_GGXLTCAmpTexture ;
	 uint  PrePadding_View_5132;
	 uint BindlessSampler_View_GGXLTCAmpSampler ;
	 uint  PrePadding_View_5140;
	 uint BindlessResource_View_SheenLTCTexture ;
	 uint  PrePadding_View_5148;
	 uint BindlessSampler_View_SheenLTCSampler ;
	 uint  PrePadding_View_5156;
	 uint  View_bShadingEnergyConservation;
	 uint  View_bShadingEnergyPreservation;
	 uint BindlessResource_View_ShadingEnergyGGXSpecTexture ;
	 uint  PrePadding_View_5172;
	 uint BindlessResource_View_ShadingEnergyGGXGlassTexture ;
	 uint  PrePadding_View_5180;
	 uint BindlessResource_View_ShadingEnergyClothSpecTexture ;
	 uint  PrePadding_View_5188;
	 uint BindlessResource_View_ShadingEnergyDiffuseTexture ;
	 uint  PrePadding_View_5196;
	 uint BindlessSampler_View_ShadingEnergySampler ;
	 uint  PrePadding_View_5204;
	 uint BindlessResource_View_GlintTexture ;
	 uint  PrePadding_View_5212;
	 uint BindlessSampler_View_GlintSampler ;
	 uint  PrePadding_View_5220;
	 uint BindlessResource_View_SimpleVolumeTexture ;
	 uint  PrePadding_View_5228;
	 uint BindlessSampler_View_SimpleVolumeTextureSampler ;
	 uint  PrePadding_View_5236;
	 uint BindlessResource_View_SimpleVolumeEnvTexture ;
	 uint  PrePadding_View_5244;
	 uint BindlessSampler_View_SimpleVolumeEnvTextureSampler ;
	 uint  PrePadding_View_5252;
	 uint BindlessResource_View_SSProfilesTexture ;
	 uint  PrePadding_View_5260;
	 uint BindlessSampler_View_SSProfilesSampler ;
	 uint  PrePadding_View_5268;
	 uint BindlessSampler_View_SSProfilesTransmissionSampler ;
	 uint  PrePadding_View_5276;
	 uint BindlessResource_View_SSProfilesPreIntegratedTexture ;
	 uint  PrePadding_View_5284;
	 uint BindlessSampler_View_SSProfilesPreIntegratedSampler ;
	 uint  PrePadding_View_5292;
	 uint BindlessResource_View_SpecularProfileTexture ;
	 uint  PrePadding_View_5300;
	 uint BindlessSampler_View_SpecularProfileSampler ;
	 uint  PrePadding_View_5308;
	 uint BindlessResource_View_WaterIndirection ;
	 uint  PrePadding_View_5316;
	 uint BindlessResource_View_WaterData ;
	 uint  PrePadding_View_5324;
	 float4  View_RectLightAtlasSizeAndInvSize;
	 float  View_RectLightAtlasMaxMipLevel;
	 float  PrePadding_View_5348;
	 uint BindlessResource_View_RectLightAtlasTexture ;
	 uint  PrePadding_View_5356;
	 uint BindlessSampler_View_RectLightAtlasSampler ;
	 uint  PrePadding_View_5364;
	 uint  PrePadding_View_5368;
	 uint  PrePadding_View_5372;
	 float4  View_IESAtlasSizeAndInvSize;
	 uint BindlessResource_View_IESAtlasTexture ;
	 uint  PrePadding_View_5396;
	 uint BindlessSampler_View_IESAtlasSampler ;
	 uint  PrePadding_View_5404;
	 uint BindlessSampler_View_LandscapeWeightmapSampler ;
	 uint  PrePadding_View_5412;
	 uint BindlessResource_View_LandscapeIndirection ;
	 uint  PrePadding_View_5420;
	 uint BindlessResource_View_LandscapePerComponentData ;
	 uint  PrePadding_View_5428;
	 uint BindlessResource_View_VTFeedbackBuffer ;
	 uint  PrePadding_View_5436;
	 uint BindlessResource_View_PhysicsFieldClipmapBuffer ;
	 uint  PrePadding_View_5444;
	 uint  PrePadding_View_5448;
	 uint  PrePadding_View_5452;
	 float3  View_TLASRelativePreViewTranslation;
	 float  PrePadding_View_5468;
	 float3  View_TLASViewTilePosition;
}

#line 3 "/Engine/Generated/UniformBuffers/InstancedView.ush"
cbuffer   InstancedView 
{
	 float4x4  InstancedView_TranslatedWorldToClip[2];
	 float4x4  InstancedView_RelativeWorldToClip[2];
	 float4x4  InstancedView_ClipToRelativeWorld[2];
	 float4x4  InstancedView_TranslatedWorldToView[2];
	 float4x4  InstancedView_ViewToTranslatedWorld[2];
	 float4x4  InstancedView_TranslatedWorldToCameraView[2];
	 float4x4  InstancedView_CameraViewToTranslatedWorld[2];
	 float4x4  InstancedView_ViewToClip[2];
	 float4x4  InstancedView_ViewToClipNoAA[2];
	 float4x4  InstancedView_ClipToView[2];
	 float4x4  InstancedView_ClipToTranslatedWorld[2];
	 float4x4  InstancedView_SVPositionToTranslatedWorld[2];
	 float4x4  InstancedView_ScreenToRelativeWorld[2];
	 float4x4  InstancedView_ScreenToTranslatedWorld[2];
	 float4x4  InstancedView_MobileMultiviewShadowTransform[2];
	 float3  InstancedView_ViewTilePosition;
	 float  PrePadding_InstancedView_1932;
	 float3  InstancedView_MatrixTilePosition;
	 float  PrePadding_InstancedView_1948;
	 float3  InstancedView_ViewForward;
	 float  PrePadding_InstancedView_1964;
	 float3  InstancedView_ViewUp;
	 float  PrePadding_InstancedView_1980;
	 float3  InstancedView_ViewRight;
	 float  PrePadding_InstancedView_1996;
	 float4  InstancedView_HMDViewNoRollUp[2];
	 float4  InstancedView_HMDViewNoRollRight[2];
	 float4  InstancedView_InvDeviceZToWorldZTransform[2];
	 float4  InstancedView_ScreenPositionScaleBias[2];
	 float4  InstancedView_RelativeWorldCameraOrigin[2];
	 float4  InstancedView_TranslatedWorldCameraOrigin[2];
	 float4  InstancedView_RelativeWorldViewOrigin[2];
	 float4  InstancedView_RelativePreViewTranslation[2];
	 float4x4  InstancedView_PrevViewToClip[2];
	 float4x4  InstancedView_PrevClipToView[2];
	 float4x4  InstancedView_PrevTranslatedWorldToClip[2];
	 float4x4  InstancedView_PrevTranslatedWorldToView[2];
	 float4x4  InstancedView_PrevViewToTranslatedWorld[2];
	 float4x4  InstancedView_PrevTranslatedWorldToCameraView[2];
	 float4x4  InstancedView_PrevCameraViewToTranslatedWorld[2];
	 float4  InstancedView_PrevTranslatedWorldCameraOrigin[2];
	 float4  InstancedView_PrevRelativeWorldCameraOrigin[2];
	 float4  InstancedView_PrevRelativeWorldViewOrigin[2];
	 float4  InstancedView_RelativePrevPreViewTranslation[2];
	 float4x4  InstancedView_PrevClipToRelativeWorld[2];
	 float4x4  InstancedView_PrevScreenToTranslatedWorld[2];
	 float4x4  InstancedView_ClipToPrevClip[2];
	 float4x4  InstancedView_ClipToPrevClipWithAA[2];
	 float4  InstancedView_TemporalAAJitter[2];
	 float4  InstancedView_GlobalClippingPlane[2];
	 float4  InstancedView_FieldOfViewWideAngles[2];
	 float4  InstancedView_PrevFieldOfViewWideAngles[2];
	 float4  InstancedView_ViewRectMin[2];
	 float4  InstancedView_ViewSizeAndInvSize;
	 uint4  InstancedView_ViewRectMinAndSize;
	 float4  InstancedView_LightProbeSizeRatioAndInvSizeRatio;
	 float4  InstancedView_BufferSizeAndInvSize;
	 float4  InstancedView_BufferBilinearUVMinMax[2];
	 float4  InstancedView_ScreenToViewSpace[2];
	 float4  InstancedView_BufferToSceneTextureScale[2];
	 float2  InstancedView_ResolutionFractionAndInv;
	 int  InstancedView_NumSceneColorMSAASamples;
	 int  PrePadding_InstancedView_4124;
	 float4  InstancedView_ProjectionDepthThicknessScale[2];
	 float  InstancedView_PreExposure;
	 float  InstancedView_OneOverPreExposure;
	 float  PrePadding_InstancedView_4168;
	 float  PrePadding_InstancedView_4172;
	 float4  InstancedView_DiffuseOverrideParameter;
	 float4  InstancedView_SpecularOverrideParameter;
	 float4  InstancedView_NormalOverrideParameter;
	 float2  InstancedView_RoughnessOverrideParameter;
	 float  InstancedView_PrevFrameGameTime;
	 float  InstancedView_PrevFrameRealTime;
	 float  InstancedView_OutOfBoundsMask;
	 float  PrePadding_InstancedView_4244;
	 float  PrePadding_InstancedView_4248;
	 float  PrePadding_InstancedView_4252;
	 float4  InstancedView_WorldCameraMovementSinceLastFrame[2];
	 float  InstancedView_CullingSign;
	 float  PrePadding_InstancedView_4292;
	 float  PrePadding_InstancedView_4296;
	 float  PrePadding_InstancedView_4300;
	 float4  InstancedView_NearPlane[2];
	 float  InstancedView_GameTime;
	 float  InstancedView_RealTime;
	 float  InstancedView_DeltaTime;
	 float  InstancedView_MaterialTextureMipBias;
	 float  InstancedView_MaterialTextureDerivativeMultiply;
	 uint  InstancedView_Random;
	 uint  InstancedView_FrameNumber;
	 uint  InstancedView_FrameCounter;
	 uint  InstancedView_StateFrameIndexMod8;
	 uint  InstancedView_StateFrameIndex;
	 uint  InstancedView_DebugViewModeMask;
	 uint  InstancedView_WorldIsPaused;
	 float  InstancedView_CameraCut;
	 float  InstancedView_UnlitViewmodeMask;
	 float  PrePadding_InstancedView_4392;
	 float  PrePadding_InstancedView_4396;
	 float4  InstancedView_DirectionalLightColor;
	 float3  InstancedView_DirectionalLightDirection;
	 float  PrePadding_InstancedView_4428;
	 float4  InstancedView_TranslucencyLightingVolumeMin[2];
	 float4  InstancedView_TranslucencyLightingVolumeInvSize[2];
	 float4  InstancedView_TemporalAAParams;
	 float4  InstancedView_CircleDOFParams;
	 float  InstancedView_DepthOfFieldSensorWidth;
	 float  InstancedView_DepthOfFieldFocalDistance;
	 float  InstancedView_DepthOfFieldScale;
	 float  InstancedView_DepthOfFieldFocalLength;
	 float  InstancedView_DepthOfFieldFocalRegion;
	 float  InstancedView_DepthOfFieldNearTransitionRegion;
	 float  InstancedView_DepthOfFieldFarTransitionRegion;
	 float  InstancedView_MotionBlurNormalizedToPixel;
	 float  InstancedView_GeneralPurposeTweak;
	 float  InstancedView_GeneralPurposeTweak2;
	 float  InstancedView_DemosaicVposOffset;
	 float  InstancedView_DecalDepthBias;
	 float3  InstancedView_IndirectLightingColorScale;
	 float  PrePadding_InstancedView_4588;
	 float3  InstancedView_PrecomputedIndirectLightingColorScale;
	 float  PrePadding_InstancedView_4604;
	 float3  InstancedView_PrecomputedIndirectSpecularColorScale;
	 float  PrePadding_InstancedView_4620;
	 float4  InstancedView_AtmosphereLightDirection[2];
	 float4  InstancedView_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];
	 float4  InstancedView_AtmosphereLightIlluminanceOuterSpace[2];
	 float4  InstancedView_AtmosphereLightDiscLuminance[2];
	 float4  InstancedView_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];
	 float4  InstancedView_SkyViewLutSizeAndInvSize;
	 float3  InstancedView_SkyCameraTranslatedWorldOrigin;
	 float  PrePadding_InstancedView_4812;
	 float4  InstancedView_SkyPlanetTranslatedWorldCenterAndViewHeight;
	 float4x4  InstancedView_SkyViewLutReferential;
	 float4  InstancedView_SkyAtmosphereSkyLuminanceFactor;
	 float  InstancedView_SkyAtmospherePresentInScene;
	 float  InstancedView_SkyAtmosphereHeightFogContribution;
	 float  InstancedView_SkyAtmosphereBottomRadiusKm;
	 float  InstancedView_SkyAtmosphereTopRadiusKm;
	 float4  InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;
	 float  InstancedView_SkyAtmosphereAerialPerspectiveStartDepthKm;
	 float  InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;
	 float  InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;
	 float  InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;
	 float  InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;
	 float  InstancedView_SkyAtmosphereApplyCameraAerialPerspectiveVolume;
	 float  PrePadding_InstancedView_4968;
	 float  PrePadding_InstancedView_4972;
	 float3  InstancedView_NormalCurvatureToRoughnessScaleBias;
	 float  InstancedView_RenderingReflectionCaptureMask;
	 float  InstancedView_RealTimeReflectionCapture;
	 float  InstancedView_RealTimeReflectionCapturePreExposure;
	 float  PrePadding_InstancedView_5000;
	 float  PrePadding_InstancedView_5004;
	 float4  InstancedView_AmbientCubemapTint;
	 float  InstancedView_AmbientCubemapIntensity;
	 float  InstancedView_SkyLightApplyPrecomputedBentNormalShadowingFlag;
	 float  InstancedView_SkyLightAffectReflectionFlag;
	 float  InstancedView_SkyLightAffectGlobalIlluminationFlag;
	 float4  InstancedView_SkyLightColor;
	 float4  InstancedView_MobileSkyIrradianceEnvironmentMap[8];
	 float  InstancedView_MobilePreviewMode;
	 float  PrePadding_InstancedView_5188;
	 float  PrePadding_InstancedView_5192;
	 float  PrePadding_InstancedView_5196;
	 float4  InstancedView_HMDEyePaddingOffset[2];
	 float  InstancedView_ReflectionCubemapMaxMip;
	 float  InstancedView_ShowDecalsMask;
	 uint  InstancedView_DistanceFieldAOSpecularOcclusionMode;
	 float  InstancedView_IndirectCapsuleSelfShadowingIntensity;
	 float3  InstancedView_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;
	 float  PrePadding_InstancedView_5260;
	 int4  InstancedView_StereoPassIndex[2];
	 float4  InstancedView_GlobalVolumeTranslatedCenterAndExtent[6];
	 float4  InstancedView_GlobalVolumeTranslatedWorldToUVAddAndMul[6];
	 float4  InstancedView_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];
	 float4  InstancedView_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];
	 float  InstancedView_GlobalDistanceFieldMipFactor;
	 float  InstancedView_GlobalDistanceFieldMipTransition;
	 int  InstancedView_GlobalDistanceFieldClipmapSizeInPages;
	 int  PrePadding_InstancedView_5692;
	 float3  InstancedView_GlobalDistanceFieldInvPageAtlasSize;
	 float  PrePadding_InstancedView_5708;
	 float3  InstancedView_GlobalDistanceFieldInvCoverageAtlasSize;
	 float  InstancedView_GlobalVolumeDimension;
	 float  InstancedView_GlobalVolumeTexelSize;
	 float  InstancedView_MaxGlobalDFAOConeDistance;
	 uint  InstancedView_NumGlobalSDFClipmaps;
	 float  InstancedView_CoveredExpandSurfaceScale;
	 float  InstancedView_NotCoveredExpandSurfaceScale;
	 float  InstancedView_NotCoveredMinStepScale;
	 float  InstancedView_DitheredTransparencyStepThreshold;
	 float  InstancedView_DitheredTransparencyTraceThreshold;
	 int2  InstancedView_CursorPosition;
	 float  InstancedView_bCheckerboardSubsurfaceProfileRendering;
	 float  PrePadding_InstancedView_5772;
	 float3  InstancedView_VolumetricFogInvGridSize;
	 float  PrePadding_InstancedView_5788;
	 float3  InstancedView_VolumetricFogGridZParams;
	 float  PrePadding_InstancedView_5804;
	 float2  InstancedView_VolumetricFogSVPosToVolumeUV;
	 float2  InstancedView_VolumetricFogViewGridUVToPrevViewRectUV;
	 float2  InstancedView_VolumetricFogPrevViewGridRectUVToResourceUV;
	 float2  InstancedView_VolumetricFogPrevUVMax;
	 float2  InstancedView_VolumetricFogScreenToResourceUV;
	 float2  InstancedView_VolumetricFogUVMax;
	 float  InstancedView_VolumetricFogMaxDistance;
	 float  PrePadding_InstancedView_5860;
	 float  PrePadding_InstancedView_5864;
	 float  PrePadding_InstancedView_5868;
	 float3  InstancedView_VolumetricLightmapWorldToUVScale;
	 float  PrePadding_InstancedView_5884;
	 float3  InstancedView_VolumetricLightmapWorldToUVAdd;
	 float  PrePadding_InstancedView_5900;
	 float3  InstancedView_VolumetricLightmapIndirectionTextureSize;
	 float  InstancedView_VolumetricLightmapBrickSize;
	 float3  InstancedView_VolumetricLightmapBrickTexelSize;
	 float  InstancedView_IndirectLightingCacheShowFlag;
	 float  InstancedView_EyeToPixelSpreadAngle;
	 float  PrePadding_InstancedView_5940;
	 float  PrePadding_InstancedView_5944;
	 float  PrePadding_InstancedView_5948;
	 float4  InstancedView_XRPassthroughCameraUVs[2];
	 float  InstancedView_GlobalVirtualTextureMipBias;
	 uint  InstancedView_VirtualTextureFeedbackShift;
	 uint  InstancedView_VirtualTextureFeedbackMask;
	 uint  InstancedView_VirtualTextureFeedbackStride;
	 uint  InstancedView_VirtualTextureFeedbackJitterOffset;
	 uint  InstancedView_VirtualTextureFeedbackSampleOffset;
	 uint  PrePadding_InstancedView_6008;
	 uint  PrePadding_InstancedView_6012;
	 float4  InstancedView_RuntimeVirtualTextureMipLevel;
	 float2  InstancedView_RuntimeVirtualTexturePackHeight;
	 float  PrePadding_InstancedView_6040;
	 float  PrePadding_InstancedView_6044;
	 float4  InstancedView_RuntimeVirtualTextureDebugParams;
	 float  InstancedView_OverrideLandscapeLOD;
	 int  InstancedView_FarShadowStaticMeshLODBias;
	 float  InstancedView_MinRoughness;
	 float  PrePadding_InstancedView_6076;
	 float4  InstancedView_HairRenderInfo;
	 uint  InstancedView_EnableSkyLight;
	 uint  InstancedView_HairRenderInfoBits;
	 uint  InstancedView_HairComponents;
	 float  InstancedView_bSubsurfacePostprocessEnabled;
	 float4  InstancedView_SSProfilesTextureSizeAndInvSize;
	 float4  InstancedView_SSProfilesPreIntegratedTextureSizeAndInvSize;
	 float4  InstancedView_SpecularProfileTextureSizeAndInvSize;
	 float3  InstancedView_PhysicsFieldClipmapCenter;
	 float  InstancedView_PhysicsFieldClipmapDistance;
	 int  InstancedView_PhysicsFieldClipmapResolution;
	 int  InstancedView_PhysicsFieldClipmapExponent;
	 int  InstancedView_PhysicsFieldClipmapCount;
	 int  InstancedView_PhysicsFieldTargetCount;
	 int4  InstancedView_PhysicsFieldTargets[32];
	 uint4  InstancedView_GPUSceneViewId[2];
	 float  InstancedView_ViewResolutionFraction;
	 float  InstancedView_SubSurfaceColorAsTransmittanceAtDistanceInMeters;
	 float  PrePadding_InstancedView_6744;
	 float  PrePadding_InstancedView_6748;
	 float4  InstancedView_TanAndInvTanHalfFOV[2];
	 float4  InstancedView_PrevTanAndInvTanHalfFOV[2];
	 float4  InstancedView_GlintLUTParameters0[2];
	 float4  InstancedView_GlintLUTParameters1[2];
}

#line 3 "/Engine/Generated/UniformBuffers/Primitive.ush"
cbuffer   Primitive 
{
	 uint  Primitive_Flags;
	 uint  Primitive_InstanceSceneDataOffset;
	 uint  Primitive_NumInstanceSceneDataEntries;
	 int  Primitive_SingleCaptureIndex;
	 float3  Primitive_TilePosition;
	 uint  Primitive_PrimitiveComponentId;
	 float4x4  Primitive_LocalToRelativeWorld;
	 float4x4  Primitive_RelativeWorldToLocal;
	 float4x4  Primitive_PreviousLocalToRelativeWorld;
	 float4x4  Primitive_PreviousRelativeWorldToLocal;
	 float4x4  Primitive_WorldToPreviousWorld;
	 float3  Primitive_InvNonUniformScale;
	 float  Primitive_ObjectBoundsX;
	 float4  Primitive_ObjectRelativeWorldPositionAndRadius;
	 float3  Primitive_ActorRelativeWorldPosition;
	 uint  Primitive_LightmapUVIndex;
	 float3  Primitive_ObjectOrientation;
	 uint  Primitive_LightmapDataIndex;
	 float4  Primitive_NonUniformScale;
	 float3  Primitive_PreSkinnedLocalBoundsMin;
	 uint  Primitive_NaniteResourceID;
	 float3  Primitive_PreSkinnedLocalBoundsMax;
	 uint  Primitive_NaniteHierarchyOffset;
	 float3  Primitive_LocalObjectBoundsMin;
	 float  Primitive_ObjectBoundsY;
	 float3  Primitive_LocalObjectBoundsMax;
	 float  Primitive_ObjectBoundsZ;
	 float3  Primitive_InstanceLocalBoundsCenter;
	 uint  Primitive_InstancePayloadDataOffset;
	 float3  Primitive_InstanceLocalBoundsExtent;
	 uint  Primitive_InstancePayloadDataStride;
	 uint  Primitive_InstancePayloadExtensionSize;
	 uint  PrePadding_Primitive_532;
	 uint  PrePadding_Primitive_536;
	 uint  PrePadding_Primitive_540;
	 float3  Primitive_WireframeColor;
	 uint  Primitive_PackedNaniteFlags;
	 float3  Primitive_LevelColor;
	 int  Primitive_PersistentPrimitiveIndex;
	 float2  Primitive_InstanceDrawDistanceMinMaxSquared;
	 float  Primitive_InstanceWPODisableDistanceSquared;
	 uint  Primitive_NaniteRayTracingDataOffset;
	 float  Primitive_MaxWPOExtent;
	 float  Primitive_MinMaterialDisplacement;
	 float  Primitive_MaxMaterialDisplacement;
	 uint  Primitive_CustomStencilValueAndMask;
	 uint  Primitive_VisibilityFlags;
	 uint  PrePadding_Primitive_612;
	 uint  PrePadding_Primitive_616;
	 uint  PrePadding_Primitive_620;
	 float4  Primitive_CustomPrimitiveData[9];
}

#line 3 "/Engine/Generated/UniformBuffers/DebugViewModePass.ush"
cbuffer   DebugViewModePass 
{
	 uint BindlessResource_DebugViewModePass_SceneTextures_SceneColorTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_4;
	 uint BindlessResource_DebugViewModePass_SceneTextures_SceneDepthTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_12;
	 uint BindlessResource_DebugViewModePass_SceneTextures_ScenePartialDepthTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_20;
	 uint BindlessResource_DebugViewModePass_SceneTextures_GBufferATexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_28;
	 uint BindlessResource_DebugViewModePass_SceneTextures_GBufferBTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_36;
	 uint BindlessResource_DebugViewModePass_SceneTextures_GBufferCTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_44;
	 uint BindlessResource_DebugViewModePass_SceneTextures_GBufferDTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_52;
	 uint BindlessResource_DebugViewModePass_SceneTextures_GBufferETexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_60;
	 uint BindlessResource_DebugViewModePass_SceneTextures_GBufferFTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_68;
	 uint BindlessResource_DebugViewModePass_SceneTextures_GBufferVelocityTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_76;
	 uint BindlessResource_DebugViewModePass_SceneTextures_ScreenSpaceAOTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_84;
	 uint BindlessResource_DebugViewModePass_SceneTextures_CustomDepthTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_92;
	 uint BindlessResource_DebugViewModePass_SceneTextures_CustomStencilTexture ;
	 uint  PrePadding_DebugViewModePass_SceneTextures_100;
	 uint BindlessSampler_DebugViewModePass_SceneTextures_PointClampSampler ;
	 float  PrePadding_DebugViewModePass_DebugViewMode_108;
	 float4  DebugViewModePass_DebugViewMode_AccuracyColors[5];
	 float4  DebugViewModePass_DebugViewMode_LODColors[8];
	 uint BindlessResource_DebugViewModePass_QuadOverdraw ;
}

#line 51 "/Engine/Generated/UniformBuffers/DebugViewModePass.ush"
RWTexture2D<uint>  DebugViewModePass_QuadOverdraw;

#line 3 "/Engine/Generated/UniformBuffers/Material.ush"
cbuffer   Material 
{
	 float4  Material_PreshaderBuffer[2];
	 uint BindlessSampler_Material_Wrap_WorldGroupSettings ;
	 uint  PrePadding_Material_36;
	 uint BindlessSampler_Material_Clamp_WorldGroupSettings ;
}

#line 1 "/Engine/Generated/GeneratedInstancedStereo.ush"
struct ViewState
{
	float4x4 TranslatedWorldToClip;
	float4x4 RelativeWorldToClip;
	float4x4 ClipToRelativeWorld;
	float4x4 TranslatedWorldToView;
	float4x4 ViewToTranslatedWorld;
	float4x4 TranslatedWorldToCameraView;
	float4x4 CameraViewToTranslatedWorld;
	float4x4 ViewToClip;
	float4x4 ViewToClipNoAA;
	float4x4 ClipToView;
	float4x4 ClipToTranslatedWorld;
	float4x4 SVPositionToTranslatedWorld;
	float4x4 ScreenToRelativeWorld;
	float4x4 ScreenToTranslatedWorld;
	float4x4 MobileMultiviewShadowTransform;
	float3 ViewTilePosition;
	float3 MatrixTilePosition;
	float3 ViewForward;
	float3 ViewUp;
	float3 ViewRight;
	float3 HMDViewNoRollUp;
	float3 HMDViewNoRollRight;
	float4 InvDeviceZToWorldZTransform;
	float4 ScreenPositionScaleBias;
	float3 RelativeWorldCameraOrigin;
	float3 TranslatedWorldCameraOrigin;
	float3 RelativeWorldViewOrigin;
	float3 RelativePreViewTranslation;
	float4x4 PrevViewToClip;
	float4x4 PrevClipToView;
	float4x4 PrevTranslatedWorldToClip;
	float4x4 PrevTranslatedWorldToView;
	float4x4 PrevViewToTranslatedWorld;
	float4x4 PrevTranslatedWorldToCameraView;
	float4x4 PrevCameraViewToTranslatedWorld;
	float3 PrevTranslatedWorldCameraOrigin;
	float3 PrevRelativeWorldCameraOrigin;
	float3 PrevRelativeWorldViewOrigin;
	float3 RelativePrevPreViewTranslation;
	float4x4 PrevClipToRelativeWorld;
	float4x4 PrevScreenToTranslatedWorld;
	float4x4 ClipToPrevClip;
	float4x4 ClipToPrevClipWithAA;
	float4 TemporalAAJitter;
	float4 GlobalClippingPlane;
	float2 FieldOfViewWideAngles;
	float2 PrevFieldOfViewWideAngles;
	float4 ViewRectMin;
	float4 ViewSizeAndInvSize;
	uint4 ViewRectMinAndSize;
	float4 LightProbeSizeRatioAndInvSizeRatio;
	float4 BufferSizeAndInvSize;
	float4 BufferBilinearUVMinMax;
	float4 ScreenToViewSpace;
	float2 BufferToSceneTextureScale;
	float2 ResolutionFractionAndInv;
	int NumSceneColorMSAASamples;
	float ProjectionDepthThicknessScale;
	float PreExposure;
	float OneOverPreExposure;
	float4 DiffuseOverrideParameter;
	float4 SpecularOverrideParameter;
	float4 NormalOverrideParameter;
	float2 RoughnessOverrideParameter;
	float PrevFrameGameTime;
	float PrevFrameRealTime;
	float OutOfBoundsMask;
	float3 WorldCameraMovementSinceLastFrame;
	float CullingSign;
	float NearPlane;
	float GameTime;
	float RealTime;
	float DeltaTime;
	float MaterialTextureMipBias;
	float MaterialTextureDerivativeMultiply;
	uint Random;
	uint FrameNumber;
	uint FrameCounter;
	uint StateFrameIndexMod8;
	uint StateFrameIndex;
	uint DebugViewModeMask;
	uint WorldIsPaused;
	float CameraCut;
	float UnlitViewmodeMask;
	float4 DirectionalLightColor;
	float3 DirectionalLightDirection;
	float4 TranslucencyLightingVolumeMin[2];
	float4 TranslucencyLightingVolumeInvSize[2];
	float4 TemporalAAParams;
	float4 CircleDOFParams;
	float DepthOfFieldSensorWidth;
	float DepthOfFieldFocalDistance;
	float DepthOfFieldScale;
	float DepthOfFieldFocalLength;
	float DepthOfFieldFocalRegion;
	float DepthOfFieldNearTransitionRegion;
	float DepthOfFieldFarTransitionRegion;
	float MotionBlurNormalizedToPixel;
	float GeneralPurposeTweak;
	float GeneralPurposeTweak2;
	float DemosaicVposOffset;
	float DecalDepthBias;
	float3 IndirectLightingColorScale;
	float3 PrecomputedIndirectLightingColorScale;
	float3 PrecomputedIndirectSpecularColorScale;
	float4 AtmosphereLightDirection[2];
	float4 AtmosphereLightIlluminanceOnGroundPostTransmittance[2];
	float4 AtmosphereLightIlluminanceOuterSpace[2];
	float4 AtmosphereLightDiscLuminance[2];
	float4 AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];
	float4 SkyViewLutSizeAndInvSize;
	float3 SkyCameraTranslatedWorldOrigin;
	float4 SkyPlanetTranslatedWorldCenterAndViewHeight;
	float4x4 SkyViewLutReferential;
	float4 SkyAtmosphereSkyLuminanceFactor;
	float SkyAtmospherePresentInScene;
	float SkyAtmosphereHeightFogContribution;
	float SkyAtmosphereBottomRadiusKm;
	float SkyAtmosphereTopRadiusKm;
	float4 SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;
	float SkyAtmosphereAerialPerspectiveStartDepthKm;
	float SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;
	float SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;
	float SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;
	float SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;
	float SkyAtmosphereApplyCameraAerialPerspectiveVolume;
	float3 NormalCurvatureToRoughnessScaleBias;
	float RenderingReflectionCaptureMask;
	float RealTimeReflectionCapture;
	float RealTimeReflectionCapturePreExposure;
	float4 AmbientCubemapTint;
	float AmbientCubemapIntensity;
	float SkyLightApplyPrecomputedBentNormalShadowingFlag;
	float SkyLightAffectReflectionFlag;
	float SkyLightAffectGlobalIlluminationFlag;
	float4 SkyLightColor;
	float4 MobileSkyIrradianceEnvironmentMap[8];
	float MobilePreviewMode;
	float HMDEyePaddingOffset;
	float ReflectionCubemapMaxMip;
	float ShowDecalsMask;
	uint DistanceFieldAOSpecularOcclusionMode;
	float IndirectCapsuleSelfShadowingIntensity;
	float3 ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;
	int StereoPassIndex;
	float4 GlobalVolumeTranslatedCenterAndExtent[6];
	float4 GlobalVolumeTranslatedWorldToUVAddAndMul[6];
	float4 GlobalDistanceFieldMipTranslatedWorldToUVScale[6];
	float4 GlobalDistanceFieldMipTranslatedWorldToUVBias[6];
	float GlobalDistanceFieldMipFactor;
	float GlobalDistanceFieldMipTransition;
	int GlobalDistanceFieldClipmapSizeInPages;
	float3 GlobalDistanceFieldInvPageAtlasSize;
	float3 GlobalDistanceFieldInvCoverageAtlasSize;
	float GlobalVolumeDimension;
	float GlobalVolumeTexelSize;
	float MaxGlobalDFAOConeDistance;
	uint NumGlobalSDFClipmaps;
	float CoveredExpandSurfaceScale;
	float NotCoveredExpandSurfaceScale;
	float NotCoveredMinStepScale;
	float DitheredTransparencyStepThreshold;
	float DitheredTransparencyTraceThreshold;
	int2 CursorPosition;
	float bCheckerboardSubsurfaceProfileRendering;
	float3 VolumetricFogInvGridSize;
	float3 VolumetricFogGridZParams;
	float2 VolumetricFogSVPosToVolumeUV;
	float2 VolumetricFogViewGridUVToPrevViewRectUV;
	float2 VolumetricFogPrevViewGridRectUVToResourceUV;
	float2 VolumetricFogPrevUVMax;
	float2 VolumetricFogScreenToResourceUV;
	float2 VolumetricFogUVMax;
	float VolumetricFogMaxDistance;
	float3 VolumetricLightmapWorldToUVScale;
	float3 VolumetricLightmapWorldToUVAdd;
	float3 VolumetricLightmapIndirectionTextureSize;
	float VolumetricLightmapBrickSize;
	float3 VolumetricLightmapBrickTexelSize;
	float IndirectLightingCacheShowFlag;
	float EyeToPixelSpreadAngle;
	float4 XRPassthroughCameraUVs[2];
	float GlobalVirtualTextureMipBias;
	uint VirtualTextureFeedbackShift;
	uint VirtualTextureFeedbackMask;
	uint VirtualTextureFeedbackStride;
	uint VirtualTextureFeedbackJitterOffset;
	uint VirtualTextureFeedbackSampleOffset;
	float4 RuntimeVirtualTextureMipLevel;
	float2 RuntimeVirtualTexturePackHeight;
	float4 RuntimeVirtualTextureDebugParams;
	float OverrideLandscapeLOD;
	int FarShadowStaticMeshLODBias;
	float MinRoughness;
	float4 HairRenderInfo;
	uint EnableSkyLight;
	uint HairRenderInfoBits;
	uint HairComponents;
	float bSubsurfacePostprocessEnabled;
	float4 SSProfilesTextureSizeAndInvSize;
	float4 SSProfilesPreIntegratedTextureSizeAndInvSize;
	float4 SpecularProfileTextureSizeAndInvSize;
	float3 PhysicsFieldClipmapCenter;
	float PhysicsFieldClipmapDistance;
	int PhysicsFieldClipmapResolution;
	int PhysicsFieldClipmapExponent;
	int PhysicsFieldClipmapCount;
	int PhysicsFieldTargetCount;
	int4 PhysicsFieldTargets[32];
	uint GPUSceneViewId;
	float ViewResolutionFraction;
	float SubSurfaceColorAsTransmittanceAtDistanceInMeters;
	float4 TanAndInvTanHalfFOV;
	float4 PrevTanAndInvTanHalfFOV;
	float4 GlintLUTParameters0;
	float4 GlintLUTParameters1;
	FLWCInverseMatrix WorldToClip;
	FLWCMatrix ClipToWorld;
	FLWCMatrix ScreenToWorld;
	FLWCMatrix PrevClipToWorld;
	FLWCVector3 WorldCameraOrigin;
	FLWCVector3 WorldViewOrigin;
	FLWCVector3 PrevWorldCameraOrigin;
	FLWCVector3 PrevWorldViewOrigin;
	FLWCVector3 PreViewTranslation;
	FLWCVector3 PrevPreViewTranslation;
};

#line 230 "/Engine/Generated/GeneratedInstancedStereo.ush"
void FinalizeViewState(inout ViewState InOutView);

#line 231 "/Engine/Generated/GeneratedInstancedStereo.ush"
ViewState GetPrimaryView()
{
	ViewState Result;
	Result.TranslatedWorldToClip = View_TranslatedWorldToClip;
	Result.RelativeWorldToClip = View_RelativeWorldToClip;
	Result.ClipToRelativeWorld = View_ClipToRelativeWorld;
	Result.TranslatedWorldToView = View_TranslatedWorldToView;
	Result.ViewToTranslatedWorld = View_ViewToTranslatedWorld;
	Result.TranslatedWorldToCameraView = View_TranslatedWorldToCameraView;
	Result.CameraViewToTranslatedWorld = View_CameraViewToTranslatedWorld;
	Result.ViewToClip = View_ViewToClip;
	Result.ViewToClipNoAA = View_ViewToClipNoAA;
	Result.ClipToView = View_ClipToView;
	Result.ClipToTranslatedWorld = View_ClipToTranslatedWorld;
	Result.SVPositionToTranslatedWorld = View_SVPositionToTranslatedWorld;
	Result.ScreenToRelativeWorld = View_ScreenToRelativeWorld;
	Result.ScreenToTranslatedWorld = View_ScreenToTranslatedWorld;
	Result.MobileMultiviewShadowTransform = View_MobileMultiviewShadowTransform;
	Result.ViewTilePosition = View_ViewTilePosition;
	Result.MatrixTilePosition = View_MatrixTilePosition;
	Result.ViewForward = View_ViewForward;
	Result.ViewUp = View_ViewUp;
	Result.ViewRight = View_ViewRight;
	Result.HMDViewNoRollUp = View_HMDViewNoRollUp;
	Result.HMDViewNoRollRight = View_HMDViewNoRollRight;
	Result.InvDeviceZToWorldZTransform = View_InvDeviceZToWorldZTransform;
	Result.ScreenPositionScaleBias = View_ScreenPositionScaleBias;
	Result.RelativeWorldCameraOrigin = View_RelativeWorldCameraOrigin;
	Result.TranslatedWorldCameraOrigin = View_TranslatedWorldCameraOrigin;
	Result.RelativeWorldViewOrigin = View_RelativeWorldViewOrigin;
	Result.RelativePreViewTranslation = View_RelativePreViewTranslation;
	Result.PrevViewToClip = View_PrevViewToClip;
	Result.PrevClipToView = View_PrevClipToView;
	Result.PrevTranslatedWorldToClip = View_PrevTranslatedWorldToClip;
	Result.PrevTranslatedWorldToView = View_PrevTranslatedWorldToView;
	Result.PrevViewToTranslatedWorld = View_PrevViewToTranslatedWorld;
	Result.PrevTranslatedWorldToCameraView = View_PrevTranslatedWorldToCameraView;
	Result.PrevCameraViewToTranslatedWorld = View_PrevCameraViewToTranslatedWorld;
	Result.PrevTranslatedWorldCameraOrigin = View_PrevTranslatedWorldCameraOrigin;
	Result.PrevRelativeWorldCameraOrigin = View_PrevRelativeWorldCameraOrigin;
	Result.PrevRelativeWorldViewOrigin = View_PrevRelativeWorldViewOrigin;
	Result.RelativePrevPreViewTranslation = View_RelativePrevPreViewTranslation;
	Result.PrevClipToRelativeWorld = View_PrevClipToRelativeWorld;
	Result.PrevScreenToTranslatedWorld = View_PrevScreenToTranslatedWorld;
	Result.ClipToPrevClip = View_ClipToPrevClip;
	Result.ClipToPrevClipWithAA = View_ClipToPrevClipWithAA;
	Result.TemporalAAJitter = View_TemporalAAJitter;
	Result.GlobalClippingPlane = View_GlobalClippingPlane;
	Result.FieldOfViewWideAngles = View_FieldOfViewWideAngles;
	Result.PrevFieldOfViewWideAngles = View_PrevFieldOfViewWideAngles;
	Result.ViewRectMin = View_ViewRectMin;
	Result.ViewSizeAndInvSize = View_ViewSizeAndInvSize;
	Result.ViewRectMinAndSize = View_ViewRectMinAndSize;
	Result.LightProbeSizeRatioAndInvSizeRatio = View_LightProbeSizeRatioAndInvSizeRatio;
	Result.BufferSizeAndInvSize = View_BufferSizeAndInvSize;
	Result.BufferBilinearUVMinMax = View_BufferBilinearUVMinMax;
	Result.ScreenToViewSpace = View_ScreenToViewSpace;
	Result.BufferToSceneTextureScale = View_BufferToSceneTextureScale;
	Result.ResolutionFractionAndInv = View_ResolutionFractionAndInv;
	Result.NumSceneColorMSAASamples = View_NumSceneColorMSAASamples;
	Result.ProjectionDepthThicknessScale = View_ProjectionDepthThicknessScale;
	Result.PreExposure = View_PreExposure;
	Result.OneOverPreExposure = View_OneOverPreExposure;
	Result.DiffuseOverrideParameter = View_DiffuseOverrideParameter;
	Result.SpecularOverrideParameter = View_SpecularOverrideParameter;
	Result.NormalOverrideParameter = View_NormalOverrideParameter;
	Result.RoughnessOverrideParameter = View_RoughnessOverrideParameter;
	Result.PrevFrameGameTime = View_PrevFrameGameTime;
	Result.PrevFrameRealTime = View_PrevFrameRealTime;
	Result.OutOfBoundsMask = View_OutOfBoundsMask;
	Result.WorldCameraMovementSinceLastFrame = View_WorldCameraMovementSinceLastFrame;
	Result.CullingSign = View_CullingSign;
	Result.NearPlane = View_NearPlane;
	Result.GameTime = View_GameTime;
	Result.RealTime = View_RealTime;
	Result.DeltaTime = View_DeltaTime;
	Result.MaterialTextureMipBias = View_MaterialTextureMipBias;
	Result.MaterialTextureDerivativeMultiply = View_MaterialTextureDerivativeMultiply;
	Result.Random = View_Random;
	Result.FrameNumber = View_FrameNumber;
	Result.FrameCounter = View_FrameCounter;
	Result.StateFrameIndexMod8 = View_StateFrameIndexMod8;
	Result.StateFrameIndex = View_StateFrameIndex;
	Result.DebugViewModeMask = View_DebugViewModeMask;
	Result.WorldIsPaused = View_WorldIsPaused;
	Result.CameraCut = View_CameraCut;
	Result.UnlitViewmodeMask = View_UnlitViewmodeMask;
	Result.DirectionalLightColor = View_DirectionalLightColor;
	Result.DirectionalLightDirection = View_DirectionalLightDirection;
	Result.TranslucencyLightingVolumeMin = View_TranslucencyLightingVolumeMin;
	Result.TranslucencyLightingVolumeInvSize = View_TranslucencyLightingVolumeInvSize;
	Result.TemporalAAParams = View_TemporalAAParams;
	Result.CircleDOFParams = View_CircleDOFParams;
	Result.DepthOfFieldSensorWidth = View_DepthOfFieldSensorWidth;
	Result.DepthOfFieldFocalDistance = View_DepthOfFieldFocalDistance;
	Result.DepthOfFieldScale = View_DepthOfFieldScale;
	Result.DepthOfFieldFocalLength = View_DepthOfFieldFocalLength;
	Result.DepthOfFieldFocalRegion = View_DepthOfFieldFocalRegion;
	Result.DepthOfFieldNearTransitionRegion = View_DepthOfFieldNearTransitionRegion;
	Result.DepthOfFieldFarTransitionRegion = View_DepthOfFieldFarTransitionRegion;
	Result.MotionBlurNormalizedToPixel = View_MotionBlurNormalizedToPixel;
	Result.GeneralPurposeTweak = View_GeneralPurposeTweak;
	Result.GeneralPurposeTweak2 = View_GeneralPurposeTweak2;
	Result.DemosaicVposOffset = View_DemosaicVposOffset;
	Result.DecalDepthBias = View_DecalDepthBias;
	Result.IndirectLightingColorScale = View_IndirectLightingColorScale;
	Result.PrecomputedIndirectLightingColorScale = View_PrecomputedIndirectLightingColorScale;
	Result.PrecomputedIndirectSpecularColorScale = View_PrecomputedIndirectSpecularColorScale;
	Result.AtmosphereLightDirection = View_AtmosphereLightDirection;
	Result.AtmosphereLightIlluminanceOnGroundPostTransmittance = View_AtmosphereLightIlluminanceOnGroundPostTransmittance;
	Result.AtmosphereLightIlluminanceOuterSpace = View_AtmosphereLightIlluminanceOuterSpace;
	Result.AtmosphereLightDiscLuminance = View_AtmosphereLightDiscLuminance;
	Result.AtmosphereLightDiscCosHalfApexAngle_PPTrans = View_AtmosphereLightDiscCosHalfApexAngle_PPTrans;
	Result.SkyViewLutSizeAndInvSize = View_SkyViewLutSizeAndInvSize;
	Result.SkyCameraTranslatedWorldOrigin = View_SkyCameraTranslatedWorldOrigin;
	Result.SkyPlanetTranslatedWorldCenterAndViewHeight = View_SkyPlanetTranslatedWorldCenterAndViewHeight;
	Result.SkyViewLutReferential = View_SkyViewLutReferential;
	Result.SkyAtmosphereSkyLuminanceFactor = View_SkyAtmosphereSkyLuminanceFactor;
	Result.SkyAtmospherePresentInScene = View_SkyAtmospherePresentInScene;
	Result.SkyAtmosphereHeightFogContribution = View_SkyAtmosphereHeightFogContribution;
	Result.SkyAtmosphereBottomRadiusKm = View_SkyAtmosphereBottomRadiusKm;
	Result.SkyAtmosphereTopRadiusKm = View_SkyAtmosphereTopRadiusKm;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize = View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;
	Result.SkyAtmosphereAerialPerspectiveStartDepthKm = View_SkyAtmosphereAerialPerspectiveStartDepthKm;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution = View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv = View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm = View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv = View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;
	Result.SkyAtmosphereApplyCameraAerialPerspectiveVolume = View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;
	Result.NormalCurvatureToRoughnessScaleBias = View_NormalCurvatureToRoughnessScaleBias;
	Result.RenderingReflectionCaptureMask = View_RenderingReflectionCaptureMask;
	Result.RealTimeReflectionCapture = View_RealTimeReflectionCapture;
	Result.RealTimeReflectionCapturePreExposure = View_RealTimeReflectionCapturePreExposure;
	Result.AmbientCubemapTint = View_AmbientCubemapTint;
	Result.AmbientCubemapIntensity = View_AmbientCubemapIntensity;
	Result.SkyLightApplyPrecomputedBentNormalShadowingFlag = View_SkyLightApplyPrecomputedBentNormalShadowingFlag;
	Result.SkyLightAffectReflectionFlag = View_SkyLightAffectReflectionFlag;
	Result.SkyLightAffectGlobalIlluminationFlag = View_SkyLightAffectGlobalIlluminationFlag;
	Result.SkyLightColor = View_SkyLightColor;
	Result.MobileSkyIrradianceEnvironmentMap = View_MobileSkyIrradianceEnvironmentMap;
	Result.MobilePreviewMode = View_MobilePreviewMode;
	Result.HMDEyePaddingOffset = View_HMDEyePaddingOffset;
	Result.ReflectionCubemapMaxMip = View_ReflectionCubemapMaxMip;
	Result.ShowDecalsMask = View_ShowDecalsMask;
	Result.DistanceFieldAOSpecularOcclusionMode = View_DistanceFieldAOSpecularOcclusionMode;
	Result.IndirectCapsuleSelfShadowingIntensity = View_IndirectCapsuleSelfShadowingIntensity;
	Result.ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight = View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;
	Result.StereoPassIndex = View_StereoPassIndex;
	Result.GlobalVolumeTranslatedCenterAndExtent = View_GlobalVolumeTranslatedCenterAndExtent;
	Result.GlobalVolumeTranslatedWorldToUVAddAndMul = View_GlobalVolumeTranslatedWorldToUVAddAndMul;
	Result.GlobalDistanceFieldMipTranslatedWorldToUVScale = View_GlobalDistanceFieldMipTranslatedWorldToUVScale;
	Result.GlobalDistanceFieldMipTranslatedWorldToUVBias = View_GlobalDistanceFieldMipTranslatedWorldToUVBias;
	Result.GlobalDistanceFieldMipFactor = View_GlobalDistanceFieldMipFactor;
	Result.GlobalDistanceFieldMipTransition = View_GlobalDistanceFieldMipTransition;
	Result.GlobalDistanceFieldClipmapSizeInPages = View_GlobalDistanceFieldClipmapSizeInPages;
	Result.GlobalDistanceFieldInvPageAtlasSize = View_GlobalDistanceFieldInvPageAtlasSize;
	Result.GlobalDistanceFieldInvCoverageAtlasSize = View_GlobalDistanceFieldInvCoverageAtlasSize;
	Result.GlobalVolumeDimension = View_GlobalVolumeDimension;
	Result.GlobalVolumeTexelSize = View_GlobalVolumeTexelSize;
	Result.MaxGlobalDFAOConeDistance = View_MaxGlobalDFAOConeDistance;
	Result.NumGlobalSDFClipmaps = View_NumGlobalSDFClipmaps;
	Result.CoveredExpandSurfaceScale = View_CoveredExpandSurfaceScale;
	Result.NotCoveredExpandSurfaceScale = View_NotCoveredExpandSurfaceScale;
	Result.NotCoveredMinStepScale = View_NotCoveredMinStepScale;
	Result.DitheredTransparencyStepThreshold = View_DitheredTransparencyStepThreshold;
	Result.DitheredTransparencyTraceThreshold = View_DitheredTransparencyTraceThreshold;
	Result.CursorPosition = View_CursorPosition;
	Result.bCheckerboardSubsurfaceProfileRendering = View_bCheckerboardSubsurfaceProfileRendering;
	Result.VolumetricFogInvGridSize = View_VolumetricFogInvGridSize;
	Result.VolumetricFogGridZParams = View_VolumetricFogGridZParams;
	Result.VolumetricFogSVPosToVolumeUV = View_VolumetricFogSVPosToVolumeUV;
	Result.VolumetricFogViewGridUVToPrevViewRectUV = View_VolumetricFogViewGridUVToPrevViewRectUV;
	Result.VolumetricFogPrevViewGridRectUVToResourceUV = View_VolumetricFogPrevViewGridRectUVToResourceUV;
	Result.VolumetricFogPrevUVMax = View_VolumetricFogPrevUVMax;
	Result.VolumetricFogScreenToResourceUV = View_VolumetricFogScreenToResourceUV;
	Result.VolumetricFogUVMax = View_VolumetricFogUVMax;
	Result.VolumetricFogMaxDistance = View_VolumetricFogMaxDistance;
	Result.VolumetricLightmapWorldToUVScale = View_VolumetricLightmapWorldToUVScale;
	Result.VolumetricLightmapWorldToUVAdd = View_VolumetricLightmapWorldToUVAdd;
	Result.VolumetricLightmapIndirectionTextureSize = View_VolumetricLightmapIndirectionTextureSize;
	Result.VolumetricLightmapBrickSize = View_VolumetricLightmapBrickSize;
	Result.VolumetricLightmapBrickTexelSize = View_VolumetricLightmapBrickTexelSize;
	Result.IndirectLightingCacheShowFlag = View_IndirectLightingCacheShowFlag;
	Result.EyeToPixelSpreadAngle = View_EyeToPixelSpreadAngle;
	Result.XRPassthroughCameraUVs = View_XRPassthroughCameraUVs;
	Result.GlobalVirtualTextureMipBias = View_GlobalVirtualTextureMipBias;
	Result.VirtualTextureFeedbackShift = View_VirtualTextureFeedbackShift;
	Result.VirtualTextureFeedbackMask = View_VirtualTextureFeedbackMask;
	Result.VirtualTextureFeedbackStride = View_VirtualTextureFeedbackStride;
	Result.VirtualTextureFeedbackJitterOffset = View_VirtualTextureFeedbackJitterOffset;
	Result.VirtualTextureFeedbackSampleOffset = View_VirtualTextureFeedbackSampleOffset;
	Result.RuntimeVirtualTextureMipLevel = View_RuntimeVirtualTextureMipLevel;
	Result.RuntimeVirtualTexturePackHeight = View_RuntimeVirtualTexturePackHeight;
	Result.RuntimeVirtualTextureDebugParams = View_RuntimeVirtualTextureDebugParams;
	Result.OverrideLandscapeLOD = View_OverrideLandscapeLOD;
	Result.FarShadowStaticMeshLODBias = View_FarShadowStaticMeshLODBias;
	Result.MinRoughness = View_MinRoughness;
	Result.HairRenderInfo = View_HairRenderInfo;
	Result.EnableSkyLight = View_EnableSkyLight;
	Result.HairRenderInfoBits = View_HairRenderInfoBits;
	Result.HairComponents = View_HairComponents;
	Result.bSubsurfacePostprocessEnabled = View_bSubsurfacePostprocessEnabled;
	Result.SSProfilesTextureSizeAndInvSize = View_SSProfilesTextureSizeAndInvSize;
	Result.SSProfilesPreIntegratedTextureSizeAndInvSize = View_SSProfilesPreIntegratedTextureSizeAndInvSize;
	Result.SpecularProfileTextureSizeAndInvSize = View_SpecularProfileTextureSizeAndInvSize;
	Result.PhysicsFieldClipmapCenter = View_PhysicsFieldClipmapCenter;
	Result.PhysicsFieldClipmapDistance = View_PhysicsFieldClipmapDistance;
	Result.PhysicsFieldClipmapResolution = View_PhysicsFieldClipmapResolution;
	Result.PhysicsFieldClipmapExponent = View_PhysicsFieldClipmapExponent;
	Result.PhysicsFieldClipmapCount = View_PhysicsFieldClipmapCount;
	Result.PhysicsFieldTargetCount = View_PhysicsFieldTargetCount;
	Result.PhysicsFieldTargets = View_PhysicsFieldTargets;
	Result.GPUSceneViewId = View_GPUSceneViewId;
	Result.ViewResolutionFraction = View_ViewResolutionFraction;
	Result.SubSurfaceColorAsTransmittanceAtDistanceInMeters = View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;
	Result.TanAndInvTanHalfFOV = View_TanAndInvTanHalfFOV;
	Result.PrevTanAndInvTanHalfFOV = View_PrevTanAndInvTanHalfFOV;
	Result.GlintLUTParameters0 = View_GlintLUTParameters0;
	Result.GlintLUTParameters1 = View_GlintLUTParameters1;
	FinalizeViewState(Result);
	return Result;
}

#line 454 "/Engine/Generated/GeneratedInstancedStereo.ush"
ViewState GetInstancedView(uint ViewIndex)
{
	ViewState Result;
	Result.TranslatedWorldToClip = (float4x4) InstancedView_TranslatedWorldToClip[ViewIndex];
	Result.RelativeWorldToClip = (float4x4) InstancedView_RelativeWorldToClip[ViewIndex];
	Result.ClipToRelativeWorld = (float4x4) InstancedView_ClipToRelativeWorld[ViewIndex];
	Result.TranslatedWorldToView = (float4x4) InstancedView_TranslatedWorldToView[ViewIndex];
	Result.ViewToTranslatedWorld = (float4x4) InstancedView_ViewToTranslatedWorld[ViewIndex];
	Result.TranslatedWorldToCameraView = (float4x4) InstancedView_TranslatedWorldToCameraView[ViewIndex];
	Result.CameraViewToTranslatedWorld = (float4x4) InstancedView_CameraViewToTranslatedWorld[ViewIndex];
	Result.ViewToClip = (float4x4) InstancedView_ViewToClip[ViewIndex];
	Result.ViewToClipNoAA = (float4x4) InstancedView_ViewToClipNoAA[ViewIndex];
	Result.ClipToView = (float4x4) InstancedView_ClipToView[ViewIndex];
	Result.ClipToTranslatedWorld = (float4x4) InstancedView_ClipToTranslatedWorld[ViewIndex];
	Result.SVPositionToTranslatedWorld = (float4x4) InstancedView_SVPositionToTranslatedWorld[ViewIndex];
	Result.ScreenToRelativeWorld = (float4x4) InstancedView_ScreenToRelativeWorld[ViewIndex];
	Result.ScreenToTranslatedWorld = (float4x4) InstancedView_ScreenToTranslatedWorld[ViewIndex];
	Result.MobileMultiviewShadowTransform = (float4x4) InstancedView_MobileMultiviewShadowTransform[ViewIndex];
	Result.ViewTilePosition = InstancedView_ViewTilePosition;
	Result.MatrixTilePosition = InstancedView_MatrixTilePosition;
	Result.ViewForward = InstancedView_ViewForward;
	Result.ViewUp = InstancedView_ViewUp;
	Result.ViewRight = InstancedView_ViewRight;
	Result.HMDViewNoRollUp = (float3) InstancedView_HMDViewNoRollUp[ViewIndex];
	Result.HMDViewNoRollRight = (float3) InstancedView_HMDViewNoRollRight[ViewIndex];
	Result.InvDeviceZToWorldZTransform = (float4) InstancedView_InvDeviceZToWorldZTransform[ViewIndex];
	Result.ScreenPositionScaleBias = (float4) InstancedView_ScreenPositionScaleBias[ViewIndex];
	Result.RelativeWorldCameraOrigin = (float3) InstancedView_RelativeWorldCameraOrigin[ViewIndex];
	Result.TranslatedWorldCameraOrigin = (float3) InstancedView_TranslatedWorldCameraOrigin[ViewIndex];
	Result.RelativeWorldViewOrigin = (float3) InstancedView_RelativeWorldViewOrigin[ViewIndex];
	Result.RelativePreViewTranslation = (float3) InstancedView_RelativePreViewTranslation[ViewIndex];
	Result.PrevViewToClip = (float4x4) InstancedView_PrevViewToClip[ViewIndex];
	Result.PrevClipToView = (float4x4) InstancedView_PrevClipToView[ViewIndex];
	Result.PrevTranslatedWorldToClip = (float4x4) InstancedView_PrevTranslatedWorldToClip[ViewIndex];
	Result.PrevTranslatedWorldToView = (float4x4) InstancedView_PrevTranslatedWorldToView[ViewIndex];
	Result.PrevViewToTranslatedWorld = (float4x4) InstancedView_PrevViewToTranslatedWorld[ViewIndex];
	Result.PrevTranslatedWorldToCameraView = (float4x4) InstancedView_PrevTranslatedWorldToCameraView[ViewIndex];
	Result.PrevCameraViewToTranslatedWorld = (float4x4) InstancedView_PrevCameraViewToTranslatedWorld[ViewIndex];
	Result.PrevTranslatedWorldCameraOrigin = (float3) InstancedView_PrevTranslatedWorldCameraOrigin[ViewIndex];
	Result.PrevRelativeWorldCameraOrigin = (float3) InstancedView_PrevRelativeWorldCameraOrigin[ViewIndex];
	Result.PrevRelativeWorldViewOrigin = (float3) InstancedView_PrevRelativeWorldViewOrigin[ViewIndex];
	Result.RelativePrevPreViewTranslation = (float3) InstancedView_RelativePrevPreViewTranslation[ViewIndex];
	Result.PrevClipToRelativeWorld = (float4x4) InstancedView_PrevClipToRelativeWorld[ViewIndex];
	Result.PrevScreenToTranslatedWorld = (float4x4) InstancedView_PrevScreenToTranslatedWorld[ViewIndex];
	Result.ClipToPrevClip = (float4x4) InstancedView_ClipToPrevClip[ViewIndex];
	Result.ClipToPrevClipWithAA = (float4x4) InstancedView_ClipToPrevClipWithAA[ViewIndex];
	Result.TemporalAAJitter = (float4) InstancedView_TemporalAAJitter[ViewIndex];
	Result.GlobalClippingPlane = (float4) InstancedView_GlobalClippingPlane[ViewIndex];
	Result.FieldOfViewWideAngles = (float2) InstancedView_FieldOfViewWideAngles[ViewIndex];
	Result.PrevFieldOfViewWideAngles = (float2) InstancedView_PrevFieldOfViewWideAngles[ViewIndex];
	Result.ViewRectMin = (float4) InstancedView_ViewRectMin[ViewIndex];
	Result.ViewSizeAndInvSize = InstancedView_ViewSizeAndInvSize;
	Result.ViewRectMinAndSize = InstancedView_ViewRectMinAndSize;
	Result.LightProbeSizeRatioAndInvSizeRatio = InstancedView_LightProbeSizeRatioAndInvSizeRatio;
	Result.BufferSizeAndInvSize = InstancedView_BufferSizeAndInvSize;
	Result.BufferBilinearUVMinMax = (float4) InstancedView_BufferBilinearUVMinMax[ViewIndex];
	Result.ScreenToViewSpace = (float4) InstancedView_ScreenToViewSpace[ViewIndex];
	Result.BufferToSceneTextureScale = (float2) InstancedView_BufferToSceneTextureScale[ViewIndex];
	Result.ResolutionFractionAndInv = InstancedView_ResolutionFractionAndInv;
	Result.NumSceneColorMSAASamples = InstancedView_NumSceneColorMSAASamples;
	Result.ProjectionDepthThicknessScale = (float) InstancedView_ProjectionDepthThicknessScale[ViewIndex];
	Result.PreExposure = InstancedView_PreExposure;
	Result.OneOverPreExposure = InstancedView_OneOverPreExposure;
	Result.DiffuseOverrideParameter = InstancedView_DiffuseOverrideParameter;
	Result.SpecularOverrideParameter = InstancedView_SpecularOverrideParameter;
	Result.NormalOverrideParameter = InstancedView_NormalOverrideParameter;
	Result.RoughnessOverrideParameter = InstancedView_RoughnessOverrideParameter;
	Result.PrevFrameGameTime = InstancedView_PrevFrameGameTime;
	Result.PrevFrameRealTime = InstancedView_PrevFrameRealTime;
	Result.OutOfBoundsMask = InstancedView_OutOfBoundsMask;
	Result.WorldCameraMovementSinceLastFrame = (float3) InstancedView_WorldCameraMovementSinceLastFrame[ViewIndex];
	Result.CullingSign = InstancedView_CullingSign;
	Result.NearPlane = (float) InstancedView_NearPlane[ViewIndex];
	Result.GameTime = InstancedView_GameTime;
	Result.RealTime = InstancedView_RealTime;
	Result.DeltaTime = InstancedView_DeltaTime;
	Result.MaterialTextureMipBias = InstancedView_MaterialTextureMipBias;
	Result.MaterialTextureDerivativeMultiply = InstancedView_MaterialTextureDerivativeMultiply;
	Result.Random = InstancedView_Random;
	Result.FrameNumber = InstancedView_FrameNumber;
	Result.FrameCounter = InstancedView_FrameCounter;
	Result.StateFrameIndexMod8 = InstancedView_StateFrameIndexMod8;
	Result.StateFrameIndex = InstancedView_StateFrameIndex;
	Result.DebugViewModeMask = InstancedView_DebugViewModeMask;
	Result.WorldIsPaused = InstancedView_WorldIsPaused;
	Result.CameraCut = InstancedView_CameraCut;
	Result.UnlitViewmodeMask = InstancedView_UnlitViewmodeMask;
	Result.DirectionalLightColor = InstancedView_DirectionalLightColor;
	Result.DirectionalLightDirection = InstancedView_DirectionalLightDirection;
	Result.TranslucencyLightingVolumeMin = InstancedView_TranslucencyLightingVolumeMin;
	Result.TranslucencyLightingVolumeInvSize = InstancedView_TranslucencyLightingVolumeInvSize;
	Result.TemporalAAParams = InstancedView_TemporalAAParams;
	Result.CircleDOFParams = InstancedView_CircleDOFParams;
	Result.DepthOfFieldSensorWidth = InstancedView_DepthOfFieldSensorWidth;
	Result.DepthOfFieldFocalDistance = InstancedView_DepthOfFieldFocalDistance;
	Result.DepthOfFieldScale = InstancedView_DepthOfFieldScale;
	Result.DepthOfFieldFocalLength = InstancedView_DepthOfFieldFocalLength;
	Result.DepthOfFieldFocalRegion = InstancedView_DepthOfFieldFocalRegion;
	Result.DepthOfFieldNearTransitionRegion = InstancedView_DepthOfFieldNearTransitionRegion;
	Result.DepthOfFieldFarTransitionRegion = InstancedView_DepthOfFieldFarTransitionRegion;
	Result.MotionBlurNormalizedToPixel = InstancedView_MotionBlurNormalizedToPixel;
	Result.GeneralPurposeTweak = InstancedView_GeneralPurposeTweak;
	Result.GeneralPurposeTweak2 = InstancedView_GeneralPurposeTweak2;
	Result.DemosaicVposOffset = InstancedView_DemosaicVposOffset;
	Result.DecalDepthBias = InstancedView_DecalDepthBias;
	Result.IndirectLightingColorScale = InstancedView_IndirectLightingColorScale;
	Result.PrecomputedIndirectLightingColorScale = InstancedView_PrecomputedIndirectLightingColorScale;
	Result.PrecomputedIndirectSpecularColorScale = InstancedView_PrecomputedIndirectSpecularColorScale;
	Result.AtmosphereLightDirection = InstancedView_AtmosphereLightDirection;
	Result.AtmosphereLightIlluminanceOnGroundPostTransmittance = InstancedView_AtmosphereLightIlluminanceOnGroundPostTransmittance;
	Result.AtmosphereLightIlluminanceOuterSpace = InstancedView_AtmosphereLightIlluminanceOuterSpace;
	Result.AtmosphereLightDiscLuminance = InstancedView_AtmosphereLightDiscLuminance;
	Result.AtmosphereLightDiscCosHalfApexAngle_PPTrans = InstancedView_AtmosphereLightDiscCosHalfApexAngle_PPTrans;
	Result.SkyViewLutSizeAndInvSize = InstancedView_SkyViewLutSizeAndInvSize;
	Result.SkyCameraTranslatedWorldOrigin = InstancedView_SkyCameraTranslatedWorldOrigin;
	Result.SkyPlanetTranslatedWorldCenterAndViewHeight = InstancedView_SkyPlanetTranslatedWorldCenterAndViewHeight;
	Result.SkyViewLutReferential = InstancedView_SkyViewLutReferential;
	Result.SkyAtmosphereSkyLuminanceFactor = InstancedView_SkyAtmosphereSkyLuminanceFactor;
	Result.SkyAtmospherePresentInScene = InstancedView_SkyAtmospherePresentInScene;
	Result.SkyAtmosphereHeightFogContribution = InstancedView_SkyAtmosphereHeightFogContribution;
	Result.SkyAtmosphereBottomRadiusKm = InstancedView_SkyAtmosphereBottomRadiusKm;
	Result.SkyAtmosphereTopRadiusKm = InstancedView_SkyAtmosphereTopRadiusKm;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize = InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;
	Result.SkyAtmosphereAerialPerspectiveStartDepthKm = InstancedView_SkyAtmosphereAerialPerspectiveStartDepthKm;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution = InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv = InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm = InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv = InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;
	Result.SkyAtmosphereApplyCameraAerialPerspectiveVolume = InstancedView_SkyAtmosphereApplyCameraAerialPerspectiveVolume;
	Result.NormalCurvatureToRoughnessScaleBias = InstancedView_NormalCurvatureToRoughnessScaleBias;
	Result.RenderingReflectionCaptureMask = InstancedView_RenderingReflectionCaptureMask;
	Result.RealTimeReflectionCapture = InstancedView_RealTimeReflectionCapture;
	Result.RealTimeReflectionCapturePreExposure = InstancedView_RealTimeReflectionCapturePreExposure;
	Result.AmbientCubemapTint = InstancedView_AmbientCubemapTint;
	Result.AmbientCubemapIntensity = InstancedView_AmbientCubemapIntensity;
	Result.SkyLightApplyPrecomputedBentNormalShadowingFlag = InstancedView_SkyLightApplyPrecomputedBentNormalShadowingFlag;
	Result.SkyLightAffectReflectionFlag = InstancedView_SkyLightAffectReflectionFlag;
	Result.SkyLightAffectGlobalIlluminationFlag = InstancedView_SkyLightAffectGlobalIlluminationFlag;
	Result.SkyLightColor = InstancedView_SkyLightColor;
	Result.MobileSkyIrradianceEnvironmentMap = InstancedView_MobileSkyIrradianceEnvironmentMap;
	Result.MobilePreviewMode = InstancedView_MobilePreviewMode;
	Result.HMDEyePaddingOffset = (float) InstancedView_HMDEyePaddingOffset[ViewIndex];
	Result.ReflectionCubemapMaxMip = InstancedView_ReflectionCubemapMaxMip;
	Result.ShowDecalsMask = InstancedView_ShowDecalsMask;
	Result.DistanceFieldAOSpecularOcclusionMode = InstancedView_DistanceFieldAOSpecularOcclusionMode;
	Result.IndirectCapsuleSelfShadowingIntensity = InstancedView_IndirectCapsuleSelfShadowingIntensity;
	Result.ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight = InstancedView_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;
	Result.StereoPassIndex = (int) InstancedView_StereoPassIndex[ViewIndex];
	Result.GlobalVolumeTranslatedCenterAndExtent = InstancedView_GlobalVolumeTranslatedCenterAndExtent;
	Result.GlobalVolumeTranslatedWorldToUVAddAndMul = InstancedView_GlobalVolumeTranslatedWorldToUVAddAndMul;
	Result.GlobalDistanceFieldMipTranslatedWorldToUVScale = InstancedView_GlobalDistanceFieldMipTranslatedWorldToUVScale;
	Result.GlobalDistanceFieldMipTranslatedWorldToUVBias = InstancedView_GlobalDistanceFieldMipTranslatedWorldToUVBias;
	Result.GlobalDistanceFieldMipFactor = InstancedView_GlobalDistanceFieldMipFactor;
	Result.GlobalDistanceFieldMipTransition = InstancedView_GlobalDistanceFieldMipTransition;
	Result.GlobalDistanceFieldClipmapSizeInPages = InstancedView_GlobalDistanceFieldClipmapSizeInPages;
	Result.GlobalDistanceFieldInvPageAtlasSize = InstancedView_GlobalDistanceFieldInvPageAtlasSize;
	Result.GlobalDistanceFieldInvCoverageAtlasSize = InstancedView_GlobalDistanceFieldInvCoverageAtlasSize;
	Result.GlobalVolumeDimension = InstancedView_GlobalVolumeDimension;
	Result.GlobalVolumeTexelSize = InstancedView_GlobalVolumeTexelSize;
	Result.MaxGlobalDFAOConeDistance = InstancedView_MaxGlobalDFAOConeDistance;
	Result.NumGlobalSDFClipmaps = InstancedView_NumGlobalSDFClipmaps;
	Result.CoveredExpandSurfaceScale = InstancedView_CoveredExpandSurfaceScale;
	Result.NotCoveredExpandSurfaceScale = InstancedView_NotCoveredExpandSurfaceScale;
	Result.NotCoveredMinStepScale = InstancedView_NotCoveredMinStepScale;
	Result.DitheredTransparencyStepThreshold = InstancedView_DitheredTransparencyStepThreshold;
	Result.DitheredTransparencyTraceThreshold = InstancedView_DitheredTransparencyTraceThreshold;
	Result.CursorPosition = InstancedView_CursorPosition;
	Result.bCheckerboardSubsurfaceProfileRendering = InstancedView_bCheckerboardSubsurfaceProfileRendering;
	Result.VolumetricFogInvGridSize = InstancedView_VolumetricFogInvGridSize;
	Result.VolumetricFogGridZParams = InstancedView_VolumetricFogGridZParams;
	Result.VolumetricFogSVPosToVolumeUV = InstancedView_VolumetricFogSVPosToVolumeUV;
	Result.VolumetricFogViewGridUVToPrevViewRectUV = InstancedView_VolumetricFogViewGridUVToPrevViewRectUV;
	Result.VolumetricFogPrevViewGridRectUVToResourceUV = InstancedView_VolumetricFogPrevViewGridRectUVToResourceUV;
	Result.VolumetricFogPrevUVMax = InstancedView_VolumetricFogPrevUVMax;
	Result.VolumetricFogScreenToResourceUV = InstancedView_VolumetricFogScreenToResourceUV;
	Result.VolumetricFogUVMax = InstancedView_VolumetricFogUVMax;
	Result.VolumetricFogMaxDistance = InstancedView_VolumetricFogMaxDistance;
	Result.VolumetricLightmapWorldToUVScale = InstancedView_VolumetricLightmapWorldToUVScale;
	Result.VolumetricLightmapWorldToUVAdd = InstancedView_VolumetricLightmapWorldToUVAdd;
	Result.VolumetricLightmapIndirectionTextureSize = InstancedView_VolumetricLightmapIndirectionTextureSize;
	Result.VolumetricLightmapBrickSize = InstancedView_VolumetricLightmapBrickSize;
	Result.VolumetricLightmapBrickTexelSize = InstancedView_VolumetricLightmapBrickTexelSize;
	Result.IndirectLightingCacheShowFlag = InstancedView_IndirectLightingCacheShowFlag;
	Result.EyeToPixelSpreadAngle = InstancedView_EyeToPixelSpreadAngle;
	Result.XRPassthroughCameraUVs = InstancedView_XRPassthroughCameraUVs;
	Result.GlobalVirtualTextureMipBias = InstancedView_GlobalVirtualTextureMipBias;
	Result.VirtualTextureFeedbackShift = InstancedView_VirtualTextureFeedbackShift;
	Result.VirtualTextureFeedbackMask = InstancedView_VirtualTextureFeedbackMask;
	Result.VirtualTextureFeedbackStride = InstancedView_VirtualTextureFeedbackStride;
	Result.VirtualTextureFeedbackJitterOffset = InstancedView_VirtualTextureFeedbackJitterOffset;
	Result.VirtualTextureFeedbackSampleOffset = InstancedView_VirtualTextureFeedbackSampleOffset;
	Result.RuntimeVirtualTextureMipLevel = InstancedView_RuntimeVirtualTextureMipLevel;
	Result.RuntimeVirtualTexturePackHeight = InstancedView_RuntimeVirtualTexturePackHeight;
	Result.RuntimeVirtualTextureDebugParams = InstancedView_RuntimeVirtualTextureDebugParams;
	Result.OverrideLandscapeLOD = InstancedView_OverrideLandscapeLOD;
	Result.FarShadowStaticMeshLODBias = InstancedView_FarShadowStaticMeshLODBias;
	Result.MinRoughness = InstancedView_MinRoughness;
	Result.HairRenderInfo = InstancedView_HairRenderInfo;
	Result.EnableSkyLight = InstancedView_EnableSkyLight;
	Result.HairRenderInfoBits = InstancedView_HairRenderInfoBits;
	Result.HairComponents = InstancedView_HairComponents;
	Result.bSubsurfacePostprocessEnabled = InstancedView_bSubsurfacePostprocessEnabled;
	Result.SSProfilesTextureSizeAndInvSize = InstancedView_SSProfilesTextureSizeAndInvSize;
	Result.SSProfilesPreIntegratedTextureSizeAndInvSize = InstancedView_SSProfilesPreIntegratedTextureSizeAndInvSize;
	Result.SpecularProfileTextureSizeAndInvSize = InstancedView_SpecularProfileTextureSizeAndInvSize;
	Result.PhysicsFieldClipmapCenter = InstancedView_PhysicsFieldClipmapCenter;
	Result.PhysicsFieldClipmapDistance = InstancedView_PhysicsFieldClipmapDistance;
	Result.PhysicsFieldClipmapResolution = InstancedView_PhysicsFieldClipmapResolution;
	Result.PhysicsFieldClipmapExponent = InstancedView_PhysicsFieldClipmapExponent;
	Result.PhysicsFieldClipmapCount = InstancedView_PhysicsFieldClipmapCount;
	Result.PhysicsFieldTargetCount = InstancedView_PhysicsFieldTargetCount;
	Result.PhysicsFieldTargets = InstancedView_PhysicsFieldTargets;
	Result.GPUSceneViewId = (uint) InstancedView_GPUSceneViewId[ViewIndex];
	Result.ViewResolutionFraction = InstancedView_ViewResolutionFraction;
	Result.SubSurfaceColorAsTransmittanceAtDistanceInMeters = InstancedView_SubSurfaceColorAsTransmittanceAtDistanceInMeters;
	Result.TanAndInvTanHalfFOV = (float4) InstancedView_TanAndInvTanHalfFOV[ViewIndex];
	Result.PrevTanAndInvTanHalfFOV = (float4) InstancedView_PrevTanAndInvTanHalfFOV[ViewIndex];
	Result.GlintLUTParameters0 = (float4) InstancedView_GlintLUTParameters0[ViewIndex];
	Result.GlintLUTParameters1 = (float4) InstancedView_GlintLUTParameters1[ViewIndex];
	FinalizeViewState(Result);
	return Result;
}

#line 17 "/Engine/Private/InstancedStereo.ush"
void FinalizeViewState(inout ViewState InOutView)
{
	InOutView.WorldToClip = MakeLWCInverseMatrix(InOutView.MatrixTilePosition, InOutView.RelativeWorldToClip);
	InOutView.ClipToWorld = MakeLWCMatrix(InOutView.MatrixTilePosition, InOutView.ClipToRelativeWorld);
	InOutView.ScreenToWorld = MakeLWCMatrix(InOutView.MatrixTilePosition, InOutView.ScreenToRelativeWorld);
	InOutView.PrevClipToWorld = MakeLWCMatrix(InOutView.MatrixTilePosition, InOutView.PrevClipToRelativeWorld);

	InOutView.WorldCameraOrigin = MakeLWCVector3(InOutView.ViewTilePosition, InOutView.RelativeWorldCameraOrigin);
	InOutView.WorldViewOrigin = MakeLWCVector3(InOutView.ViewTilePosition, InOutView.RelativeWorldViewOrigin);
	InOutView.PrevWorldCameraOrigin = MakeLWCVector3(InOutView.ViewTilePosition, InOutView.PrevRelativeWorldCameraOrigin);
	InOutView.PrevWorldViewOrigin = MakeLWCVector3(InOutView.ViewTilePosition, InOutView.PrevRelativeWorldViewOrigin);
	InOutView.PreViewTranslation = MakeLWCVector3(-InOutView.ViewTilePosition, InOutView.RelativePreViewTranslation);
	InOutView.PrevPreViewTranslation = MakeLWCVector3(-InOutView.ViewTilePosition, InOutView.RelativePrevPreViewTranslation);
}

#line 34 "/Engine/Private/InstancedStereo.ush"
static ViewState ResolvedView = (ViewState)0.0f;

#line 36 "/Engine/Private/InstancedStereo.ush"
ViewState ResolveView()
{
	return GetPrimaryView();
}

#line 42 "/Engine/Private/InstancedStereo.ush"
ViewState ResolveView(uint ViewIndex)
{
	return GetInstancedView(ViewIndex);
}

#line 595 "/Engine/Private/Common.ush"
float Luminance( float3 LinearColor )
{
	return dot( LinearColor, float3( 0.3, 0.59, 0.11 ) );
}

#line 924 "/Engine/Private/Common.ush"
float Pow2( float x )
{
	return x*x;
}

#line 929 "/Engine/Private/Common.ush"
float2 Pow2( float2 x )
{
	return x*x;
}

#line 934 "/Engine/Private/Common.ush"
float3 Pow2( float3 x )
{
	return x*x;
}

#line 939 "/Engine/Private/Common.ush"
float4 Pow2( float4 x )
{
	return x*x;
}

#line 1179 "/Engine/Private/Common.ush"
float ConvertFromDeviceZ(float DeviceZ)
{
	
	return DeviceZ * View_InvDeviceZToWorldZTransform[0] + View_InvDeviceZToWorldZTransform[1] + 1.0f / (DeviceZ * View_InvDeviceZToWorldZTransform[2] - View_InvDeviceZToWorldZTransform[3]);
}

#line 1187 "/Engine/Private/Common.ush"
bool IsOrthoProjection(float4x4 ViewToClip)
{
	return asuint(ViewToClip._44);
}

#line 1193 "/Engine/Private/Common.ush"
bool IsOrthoProjection()
{
	return IsOrthoProjection(View_ViewToClip);
}

#line 1229 "/Engine/Private/Common.ush"
float2 ScreenPositionToBufferUV(float4 ScreenPosition)
{
	return float2(ScreenPosition.xy / ScreenPosition.w * ResolvedView.ScreenPositionScaleBias.xy + ResolvedView.ScreenPositionScaleBias.wz);
}

#line 1249 "/Engine/Private/Common.ush"
float2 SvPositionToBufferUV(float4 SvPosition)
{
	return SvPosition.xy * View_BufferSizeAndInvSize.zw;
}

#line 1263 "/Engine/Private/Common.ush"
float3 SvPositionToResolvedTranslatedWorld(float4 SvPosition)
{
	float4 HomWorldPos = mul(float4(SvPosition.xyz, 1), ResolvedView.SVPositionToTranslatedWorld);

	return HomWorldPos.xyz / HomWorldPos.w;
}

#line 1293 "/Engine/Private/Common.ush"
float4 SvPositionToResolvedScreenPosition(float4 SvPosition)
{
	float2 PixelPos = SvPosition.xy - ResolvedView.ViewRectMin.xy;	

	
	float3 NDCPos = float3( (PixelPos * ResolvedView.ViewSizeAndInvSize.zw - 0.5f) * float2(2, -2), SvPosition.z);

	
	return float4(NDCPos.xyz, 1) * SvPosition.w;
}

#line 1318 "/Engine/Private/Common.ush"
float2 SvPositionToViewportUV(float4 SvPosition)
{
	
	float2 PixelPos = SvPosition.xy - ResolvedView.ViewRectMin.xy;	

	return PixelPos.xy * ResolvedView.ViewSizeAndInvSize.zw;
}

#line 1326 "/Engine/Private/Common.ush"
float2 BufferUVToViewportUV(float2 BufferUV)
{
	float2 PixelPos = BufferUV.xy * View_BufferSizeAndInvSize.xy - View_ViewRectMin.xy;
	return PixelPos.xy * View_ViewSizeAndInvSize.zw;
}

#line 1366 "/Engine/Private/Common.ush"
float2 ScreenAlignedPosition( float4 ScreenPosition )
{
	return float2(ScreenPositionToBufferUV(ScreenPosition));
}

#line 1658 "/Engine/Private/Common.ush"
float3 TransformTangentVectorToWorld(float3x3 TangentToWorld, float3 InTangentVector)
{
	
	
	return mul(InTangentVector, TangentToWorld);
}

#line 11 "/Engine/Private/QuadOverdraw.ush"
const static uint QO_DESC_NONE = 0;

#line 17 "/Engine/Private/QuadOverdraw.ush"
const static int QOS_ABORT = -2;

#line 18 "/Engine/Private/QuadOverdraw.ush"
const static int QOS_DONE = -1;

#line 19 "/Engine/Private/QuadOverdraw.ush"
const static int QOS_PENDING = 0;

#line 20 "/Engine/Private/QuadOverdraw.ush"
const static int QOS_SYNCHRONIZING = 1;

#line 21 "/Engine/Private/QuadOverdraw.ush"
const static int QOS_OWNER = 2;

#line 23 "/Engine/Private/QuadOverdraw.ush"
uint GetPrimitiveID(uint Desc)
{
	return (Desc >> 2) - 1;
}

#line 28 "/Engine/Private/QuadOverdraw.ush"
uint GetQuadPixelCount(uint Desc)
{
	return Desc & 0x3;
}

#line 33 "/Engine/Private/QuadOverdraw.ush"
uint GenerateDesc(uint SvPrimitiveID)
{
	return (SvPrimitiveID + 1) << 2;
}

#line 67 "/Engine/Private/QuadOverdraw.ush"
uint2 QuadComplexityOffset()
{
	uint QuadBufferWidth, QuadBufferHeight;
	DebugViewModePass_QuadOverdraw.GetDimensions(QuadBufferWidth, QuadBufferHeight);
	return uint2(QuadBufferWidth / 2, 0);
}

#line 86 "/Engine/Private/QuadOverdraw.ush"
uint ComputeQuadCoverage(uint2 SvPosition, uint SvPrimitiveID, uniform int NumIteration, uniform bool bOwnerOnly, uniform bool bOutputToComplexity, uint QuadComplexity)
{
	uint2 QuadID = SvPosition.xy / 2;
	int State = QOS_PENDING;

	
	
	uint QuadPixelCount = 3;

	
	[loop]
    for (int i = 0; i < NumIteration; i++)
	{
		
		
		if (bOutputToComplexity)
		{
			clip(State);
		}

		[branch]
		if (!bOwnerOnly && State == QOS_SYNCHRONIZING) 
		{
			uint CurrDesc = DebugViewModePass_QuadOverdraw[QuadID];

			
			[flatten]
			if (GetPrimitiveID(CurrDesc) != SvPrimitiveID)
			{
				State = QOS_DONE;
			}
			else
			{
				QuadPixelCount = GetQuadPixelCount(CurrDesc);
			}
		}

		[branch]
		if (State == QOS_OWNER)
		{
			uint CurrCount = GetQuadPixelCount(DebugViewModePass_QuadOverdraw[QuadID]);

			
			[branch]
			if (CurrCount == QuadPixelCount)
			{
				DebugViewModePass_QuadOverdraw[QuadID] = QO_DESC_NONE;
				State = QOS_DONE;

				if (bOutputToComplexity)
				{
					InterlockedAdd(DebugViewModePass_QuadOverdraw[QuadID + QuadComplexityOffset()], QuadComplexity);
				}
			}
			else
			{
				QuadPixelCount = CurrCount;
			}
		}

		[branch]
		if (State == QOS_PENDING)
		{
			uint PrevDesc;
			InterlockedCompareExchange(DebugViewModePass_QuadOverdraw[QuadID], QO_DESC_NONE, GenerateDesc(SvPrimitiveID), PrevDesc);

			
			[flatten]
			if (PrevDesc == QO_DESC_NONE)
			{
				State = QOS_OWNER;
			}

			
			[branch]
			if (GetPrimitiveID(PrevDesc) == SvPrimitiveID)
			{
				InterlockedAdd(DebugViewModePass_QuadOverdraw[QuadID], 1);

				State = bOwnerOnly ? QOS_ABORT : QOS_SYNCHRONIZING;
			}
		}
	}

	
	[branch]
	if (State == QOS_OWNER)
	{
		DebugViewModePass_QuadOverdraw[QuadID] = QO_DESC_NONE;
	}

	if (bOutputToComplexity)
	{
		return 0;
	}
	else
	{
		return State != QOS_ABORT ? (1 + QuadPixelCount) : 0;
	}
}

#line 30 "/Engine/Private/DebugViewModePixelShader.usf"
float4 CPUTexelFactor;

#line 31 "/Engine/Private/DebugViewModePixelShader.usf"
float4 NormalizedComplexity;

#line 32 "/Engine/Private/DebugViewModePixelShader.usf"
int2 AnalysisParams;

#line 33 "/Engine/Private/DebugViewModePixelShader.usf"
float PrimitiveAlpha;

#line 34 "/Engine/Private/DebugViewModePixelShader.usf"
int TexCoordAnalysisIndex;

#line 35 "/Engine/Private/DebugViewModePixelShader.usf"
float CPULogDistance;

#line 36 "/Engine/Private/DebugViewModePixelShader.usf"
uint bShowQuadOverdraw;

#line 37 "/Engine/Private/DebugViewModePixelShader.usf"
uint bOutputQuadOverdraw;

#line 38 "/Engine/Private/DebugViewModePixelShader.usf"
int LODIndex;

#line 39 "/Engine/Private/DebugViewModePixelShader.usf"
float3 SkinCacheDebugColor;

#line 40 "/Engine/Private/DebugViewModePixelShader.usf"
int VisualizeMode;

#line 61 "/Engine/Private/DebugViewModePixelShader.usf"
struct FTexCoordScalesParams
{
	
	int2 PixelPosition;

	
	float4 OneOverDDU;
	float4 OneOverDDV;

	
	float MinScale;
	float MaxScale;

	float TexSample;
	float TexSampleAverage;

	
	float4 ScalesPerIndex;

	float RequiredResolution;
	int VTMissingMipCount;
};

#line 13 "/Engine/Private/MonteCarlo.ush"
float3x3 GetTangentBasis( float3 TangentZ )
{
	const float Sign = TangentZ.z >= 0 ? 1 : -1;
	const float a = -rcp( Sign + TangentZ.z );
	const float b = TangentZ.x * TangentZ.y * a;
	
	float3 TangentX = { 1 + Sign * a * Pow2( TangentZ.x ), Sign * b, -Sign * TangentZ.x };
	float3 TangentY = { b,  Sign + a * Pow2( TangentZ.y ), -TangentZ.y };

	return float3x3( TangentX, TangentY, TangentZ );
}

#line 48 "/Engine/Private/MonteCarlo.ush"
float3 TangentToWorld( float3 Vec, float3 TangentZ )
{
	return mul( Vec, GetTangentBasis( TangentZ ) );
}

#line 93 "/Engine/Private/SceneData.ush"
struct FPrimitiveSceneData
{
	uint		Flags;
	uint		VisibilityFlags;
	int			InstanceSceneDataOffset; 
	int			NumInstanceSceneDataEntries;
	int			PersistentPrimitiveIndex;
	uint		SingleCaptureIndex; 
	float3		TilePosition;
	uint		PrimitiveComponentId; 
	FLWCMatrix	LocalToWorld;
	FLWCInverseMatrix WorldToLocal;
	FLWCMatrix	PreviousLocalToWorld;
	FLWCInverseMatrix PreviousWorldToLocal;
	float4x4	WorldToPreviousWorld; 
	float3		InvNonUniformScale;
	float		ObjectBoundsX;
	FLWCVector3	ObjectWorldPosition;
	FLWCVector3	ActorWorldPosition;
	float		ObjectRadius;
	uint		LightmapUVIndex;   
	float3		ObjectOrientation; 
	uint		LightmapDataIndex; 
	float4		NonUniformScale;
	float3		PreSkinnedLocalBoundsMin;
	uint		NaniteResourceID;
	float3		PreSkinnedLocalBoundsMax;
	uint		NaniteHierarchyOffset;
	float3		LocalObjectBoundsMin;
	float		ObjectBoundsY;
	float3		LocalObjectBoundsMax;
	float		ObjectBoundsZ;
	uint		InstancePayloadDataOffset;
	uint		InstancePayloadDataStride;
	uint		InstancePayloadExtensionSize;
	float3		InstanceLocalBoundsCenter;
	float3		InstanceLocalBoundsExtent;
	float3		WireframeColor; 
	float3		LevelColor; 
	uint		PackedNaniteFlags;
	float2 		InstanceDrawDistanceMinMaxSquared;
	float		InstanceWPODisableDistanceSquared;
	uint		NaniteRayTracingDataOffset;
	float		MaxWPOExtent;
	float		MinMaterialDisplacement;
	float		MaxMaterialDisplacement;
	uint		CustomStencilValueAndMask;
	float4		CustomPrimitiveData[9]; 
};

#line 404 "/Engine/Private/SceneData.ush"
struct FInstanceSceneEditorData
{
	float3 HitProxyId;
	uint   HitProxyPacked;
	bool bIsSelected;
};

#line 434 "/Engine/Private/SceneData.ush"
struct FInstanceSceneData
{
	FLWCMatrix LocalToWorld;
	FLWCMatrix PrevLocalToWorld;
	FLWCInverseMatrix WorldToLocal;
	float4   NonUniformScale;
	float3   InvNonUniformScale;
	float    DeterminantSign;
	float3   LocalBoundsCenter;
	uint     PrimitiveId;
	uint     RelativeId;
	uint     PayloadDataOffset;
	uint     PayloadExtensionOffset;
	uint     PayloadExtensionSize;
	float3   LocalBoundsExtent;
	uint     LastUpdateSceneFrameNumber;
	uint     NaniteRuntimeResourceID;
	uint     NaniteHierarchyOffset;








	float4   LightMapAndShadowMapUVBias;

	bool     ValidInstance;
	uint     Flags;


	FInstanceSceneEditorData EditorData;

};

#line 1068 "/Engine/Private/SceneData.ush"
struct FSceneDataIntermediates
{
	uint PrimitiveId;
	uint InstanceId;
	uint ViewIndex;
	uint CullingFlags;
	
	uint InstanceIdLoadIndex;
	FInstanceSceneData InstanceData;
	FPrimitiveSceneData Primitive;
};

#line 169 "/Engine/Generated/Material.ush"
struct FStrataData
{
	uint Dummy;
};

#line 173 "/Engine/Generated/Material.ush"
FStrataData GetInitialisedStrataData() { return (FStrataData)0; }

#line 186 "/Engine/Generated/Material.ush"
struct FMaterialParticleParameters
{
	
	float RelativeTime;
	
	float MotionBlurFade;
	
	float Random;
	
	float4 Velocity;
	
	float4 Color;
	
	float4 TranslatedWorldPositionAndSize;
	
	float4 MacroUV;

	



	float4 DynamicParameter;













	
	FLWCMatrix ParticleToWorld;

	
	FLWCInverseMatrix WorldToParticle;








	
	float2 Size;

	
	float SpriteRotation;
};

#line 296 "/Engine/Generated/Material.ush"
struct FMaterialAttributes
{
	float3 BaseColor;
	float Metallic;
	float Specular;
	float Roughness;
	float Anisotropy;
	float3 EmissiveColor;
	float Opacity;
	float OpacityMask;
	float3 Normal;
	float3 Tangent;
	float3 WorldPositionOffset;
	float Displacement;
	float3 SubsurfaceColor;
	float ClearCoat;
	float ClearCoatRoughness;
	float AmbientOcclusion;
	float3 Refraction;
	float PixelDepthOffset;
	uint ShadingModel;
	float SurfaceThickness;
	FStrataData FrontMaterial;
	float2 CustomizedUV0;
	float2 CustomizedUV1;
	float2 CustomizedUV2;
	float2 CustomizedUV3;
	float2 CustomizedUV4;
	float2 CustomizedUV5;
	float2 CustomizedUV6;
	float2 CustomizedUV7;
	float3 BentNormal;
	float3 ClearCoatBottomNormal;
	float3 CustomEyeTangent;
	float3 TransmittanceColor;
};

#line 373 "/Engine/Generated/Material.ush"
struct FPixelMaterialInputs
{
	float3 EmissiveColor;
	float Opacity;
	float OpacityMask;
	float3 BaseColor;
	float Metallic;
	float Specular;
	float Roughness;
	float Anisotropy;
	float3 Normal;
	float3 Tangent;
	float4 Subsurface;
	float AmbientOcclusion;
	float3 Refraction;
	float PixelDepthOffset;
	uint ShadingModel;
	FStrataData FrontMaterial;
	float SurfaceThickness;
	float Displacement;












};

#line 411 "/Engine/Generated/Material.ush"
struct FMaterialPixelParameters
{




	
	float4 VertexColor;

	
	float3 WorldNormal;
	
	
	float3 WorldTangent;

	
	float3 ReflectionVector;

	
	float3 CameraVector;

	
	float3 LightVector;

	




	float4 SvPosition;
		
	
	float4 ScreenPosition;

	



	float2 ViewBufferUV;





	float UnMirrored;

	float TwoSidedSign;

	



	float3x3 TangentToWorld;






	



	FLWCVector3 AbsoluteWorldPosition;

	


	float3 WorldPosition_CamRelative;

	



	FLWCVector3 WorldPosition_NoOffsets;

	



	float3 WorldPosition_NoOffsets_CamRelative;

	
	float3 LightingPositionOffset;

	
	float3 WorldPosition_DDX;
	float3 WorldPosition_DDY;
	float4 VertexColor_DDX;
	float4 VertexColor_DDY;
	float4 ScreenPosition_DDX;
	float4 ScreenPosition_DDY;
	





	float AOMaterialMask;















	
	uint PrimitiveId;










	


















	
	FMaterialParticleParameters Particle;






	
	FTexCoordScalesParams TexCoordScalesParams;



	
	
	
	uint Dummy;





















#line 620 "/Engine/Generated/Material.ush"


	FMaterialAttributes MaterialAttributes;
};

#line 639 "/Engine/Generated/Material.ush"
FMaterialPixelParameters MakeInitializedMaterialPixelParameters()
{
	FMaterialPixelParameters MPP;
	MPP = (FMaterialPixelParameters)0;
	MPP.TangentToWorld = float3x3(1,0,0,0,1,0,0,0,1);
	return MPP;
}

#line 651 "/Engine/Generated/Material.ush"
struct FMaterialVertexParameters
{
	
	
	
	float3 WorldPosition;
	
	float3x3 TangentToWorld;










	













	
	
	FLWCMatrix PrevFrameLocalToWorld;

	float3 PreSkinnedPosition;
	float3 PreSkinnedNormal;

	float4 VertexColor;












	
	FMaterialParticleParameters Particle;





	FMaterialAttributes MaterialAttributes;

	
	FSceneDataIntermediates SceneData;

	
	
	uint PrimitiveId;

	bool bEvaluateWorldPositionOffset;
};

#line 907 "/Engine/Generated/Material.ush"
float4 GetScreenPosition(FMaterialVertexParameters Parameters)
{
	return mul(float4(Parameters.WorldPosition, 1.0f), ResolvedView.TranslatedWorldToClip);
}

#line 912 "/Engine/Generated/Material.ush"
float4 GetScreenPosition(FMaterialPixelParameters Parameters)
{
	return Parameters.ScreenPosition;
}

#line 948 "/Engine/Generated/Material.ush"
float2 GetSceneTextureUV(FMaterialVertexParameters Parameters)
{
	return ScreenAlignedPosition(GetScreenPosition(Parameters));
}

#line 953 "/Engine/Generated/Material.ush"
float2 GetSceneTextureUV(FMaterialPixelParameters Parameters)
{
	return SvPositionToBufferUV(Parameters.SvPosition);
}

#line 958 "/Engine/Generated/Material.ush"
float2 GetViewportUV(FMaterialVertexParameters Parameters)
{



	return BufferUVToViewportUV(GetSceneTextureUV(Parameters));

}

#line 991 "/Engine/Generated/Material.ush"
float2 GetViewportUV(FMaterialPixelParameters Parameters)
{
	return SvPositionToViewportUV(Parameters.SvPosition);
}

#line 1111 "/Engine/Generated/Material.ush"
float2 GetDefaultSceneTextureUV(FMaterialVertexParameters Parameters, const uint SceneTextureId)
{
	return GetSceneTextureUV(Parameters);
}

#line 1117 "/Engine/Generated/Material.ush"
float2 GetDefaultSceneTextureUV(FMaterialPixelParameters Parameters, const uint SceneTextureId)
{
	


		return GetSceneTextureUV(Parameters);
	
}

#line 2096 "/Engine/Generated/Material.ush"
float3 ReflectionAboutCustomWorldNormal(FMaterialPixelParameters Parameters, float3 WorldNormal, bool bNormalizeInputNormal)
{
	if (bNormalizeInputNormal)
	{
		WorldNormal = normalize(WorldNormal);
	}

	return -Parameters.CameraVector + WorldNormal * dot(WorldNormal, Parameters.CameraVector) * 2.0;
}

#line 2560 "/Engine/Generated/Material.ush"
float4 SceneTextureLookup(float2 UV, int SceneTextureIndex, bool bFiltered)
{


	
	switch(SceneTextureIndex)
	{
	case 1:
	case 13:
		return ConvertFromDeviceZ(0.0f);
	case 12:
	case 25:
		return 1.0f;
	default:
		return 0.0f;
	}

#line 2687 "/Engine/Generated/Material.ush"


	return float4(0, 0, 0, 0);
}

#line 2839 "/Engine/Generated/Material.ush"
float3 CustomExpression0(FMaterialPixelParameters Parameters,float2 ScreenPosition)
{
return mul(float4(ScreenPosition.xy, 1, 0), LWCToFloat(ResolvedView.ScreenToWorld)).xyz;
}

#line 2937 "/Engine/Generated/Material.ush"
float3 GetMaterialNormalRaw(FPixelMaterialInputs PixelMaterialInputs)
{
	return PixelMaterialInputs.Normal;
}

#line 2942 "/Engine/Generated/Material.ush"
float3 GetMaterialNormal(FMaterialPixelParameters Parameters, FPixelMaterialInputs PixelMaterialInputs)
{
	float3 RetNormal;

	RetNormal = GetMaterialNormalRaw(PixelMaterialInputs);
		
	
	{
		
		float3 OverrideNormal = ResolvedView.NormalOverrideParameter.xyz;

		



		RetNormal = RetNormal * ResolvedView.NormalOverrideParameter.w + OverrideNormal;
	}
	

	return RetNormal;
}

#line 2974 "/Engine/Generated/Material.ush"
float3 GetMaterialEmissiveRaw(FPixelMaterialInputs PixelMaterialInputs)
{
	return PixelMaterialInputs.EmissiveColor;
}

#line 2999 "/Engine/Generated/Material.ush"
float3 GetMaterialBaseColorRaw(FPixelMaterialInputs PixelMaterialInputs)
{
	return PixelMaterialInputs.BaseColor;
}

#line 3009 "/Engine/Generated/Material.ush"
float GetMaterialMetallicRaw(FPixelMaterialInputs PixelMaterialInputs)
{
	return PixelMaterialInputs.Metallic;
}

#line 3019 "/Engine/Generated/Material.ush"
float GetMaterialSpecularRaw(FPixelMaterialInputs PixelMaterialInputs)
{
	return PixelMaterialInputs.Specular;
}

#line 3029 "/Engine/Generated/Material.ush"
float GetMaterialRoughnessRaw(FPixelMaterialInputs PixelMaterialInputs)
{
	return PixelMaterialInputs.Roughness;
}

#line 3129 "/Engine/Generated/Material.ush"
float GetMaterialOpacityRaw(FPixelMaterialInputs PixelMaterialInputs)
{
	return PixelMaterialInputs.Opacity;
}

#line 3221 "/Engine/Generated/Material.ush"
float4 GetMaterialSubsurfaceDataRaw(FPixelMaterialInputs PixelMaterialInputs)
{
	return PixelMaterialInputs.Subsurface;
}

#line 3233 "/Engine/Generated/Material.ush"
float GetMaterialCustomData0(in out FMaterialPixelParameters Parameters)
{
	return 1.00000000;;
}

#line 3238 "/Engine/Generated/Material.ush"
float GetMaterialCustomData1(in out FMaterialPixelParameters Parameters)
{
	return 0.10000000;;
}

#line 3243 "/Engine/Generated/Material.ush"
float GetMaterialAmbientOcclusionRaw(FPixelMaterialInputs PixelMaterialInputs)
{
	return PixelMaterialInputs.AmbientOcclusion;
}

#line 3306 "/Engine/Generated/Material.ush"
float GetMaterialPixelDepthOffset(FPixelMaterialInputs PixelMaterialInputs)
{
	return PixelMaterialInputs.PixelDepthOffset;
}

#line 3328 "/Engine/Generated/Material.ush"
float3 TransformTangentNormalToWorld(float3x3 TangentToWorld, float3 TangentNormal)
{
	return normalize(float3(TransformTangentVectorToWorld(TangentToWorld, TangentNormal)));
}

#line 3389 "/Engine/Generated/Material.ush"
void CalcPixelMaterialInputs(in out FMaterialPixelParameters Parameters, in out FPixelMaterialInputs PixelMaterialInputs)
{
	

	
	PixelMaterialInputs.Normal = float3(0.00000000,0.00000000,1.00000000);












	
	float3 MaterialNormal = GetMaterialNormal(Parameters, PixelMaterialInputs);




	
	MaterialNormal = normalize(MaterialNormal);


	
	
	Parameters.WorldNormal = TransformTangentNormalToWorld(Parameters.TangentToWorld, MaterialNormal);








	
	Parameters.WorldNormal *= Parameters.TwoSidedSign;


	Parameters.ReflectionVector = ReflectionAboutCustomWorldNormal(Parameters, Parameters.WorldNormal, false);


	Parameters.Particle.MotionBlurFade = 1.0f;


	
	float4 Local0 = SceneTextureLookup(GetDefaultSceneTextureUV(Parameters, 13), 13, false);
	float2 Local1 = GetViewportUV(Parameters);
	float2 Local2 = (  Local1  * ((float2)2.00000000));
	float2 Local3 = (  Local2  - ((float2)1.00000000));
	float3 Local4 = CustomExpression0(Parameters,  Local3 );
	float3 Local5 = (((float3)Local0.rgba.a) * Local4);
	float3 Local6 = (((float3)0.00000000) - Local5);
	float Local7 = length(Local6);
	float Local8 = (Local7 * 0.01000000);
	float3 Local9 = lerp(((float3)Local8),Material_PreshaderBuffer[1].yzw,Material_PreshaderBuffer[1].x);

	PixelMaterialInputs.EmissiveColor = Local9;
	PixelMaterialInputs.Opacity = 1.00000000;
	PixelMaterialInputs.OpacityMask = 1.00000000;
	PixelMaterialInputs.BaseColor = float3(0.00000000,0.00000000,0.00000000);
	PixelMaterialInputs.Metallic = 0.00000000;
	PixelMaterialInputs.Specular = 0.50000000;
	PixelMaterialInputs.Roughness = 0.50000000;
	PixelMaterialInputs.Anisotropy = 0.00000000;
	PixelMaterialInputs.Normal = float3(0.00000000,0.00000000,1.00000000);
	PixelMaterialInputs.Tangent = float3(1.00000000,0.00000000,0.00000000);
	PixelMaterialInputs.Subsurface = 0;
	PixelMaterialInputs.AmbientOcclusion = 1.00000000;
	PixelMaterialInputs.Refraction = 0;
	PixelMaterialInputs.PixelDepthOffset = 0.00000000;
	PixelMaterialInputs.ShadingModel = 0;
	PixelMaterialInputs.FrontMaterial = GetInitialisedStrataData();
	PixelMaterialInputs.SurfaceThickness = 0.01000000;
	PixelMaterialInputs.Displacement = 0.00000000;





	Parameters.WorldTangent = 0;

}

#line 3755 "/Engine/Generated/Material.ush"
bool IsOrthoProjection(ViewState InView)
{
	return InView.ViewToClip[3][3] >= 1.0f;
}

#line 3761 "/Engine/Generated/Material.ush"
void CalcMaterialParametersEx(
	in out FMaterialPixelParameters Parameters,
	in out FPixelMaterialInputs PixelMaterialInputs,
	float4 SvPosition,
	float4 ScreenPosition,
	bool bIsFrontFace,
	float3 TranslatedWorldPosition,
	float3 TranslatedWorldPositionExcludingShaderOffsets)
{
	
	Parameters.WorldPosition_CamRelative = TranslatedWorldPosition.xyz;
	Parameters.AbsoluteWorldPosition = LWCSubtract(TranslatedWorldPosition.xyz, ResolvedView.PreViewTranslation);

	
	

	Parameters.WorldPosition_NoOffsets_CamRelative = TranslatedWorldPositionExcludingShaderOffsets;
	Parameters.WorldPosition_NoOffsets = LWCSubtract(TranslatedWorldPositionExcludingShaderOffsets, ResolvedView.PreViewTranslation);


	Parameters.SvPosition = SvPosition;
	Parameters.ScreenPosition = ScreenPosition;
	Parameters.ViewBufferUV = ScreenPositionToBufferUV(ScreenPosition);

	
	


		if (IsOrthoProjection(ResolvedView))
		{
			
			Parameters.CameraVector = -ResolvedView.ViewForward;
		}
		else
		{
			
			Parameters.CameraVector = normalize(-Parameters.WorldPosition_CamRelative.xyz);
		}
	

	Parameters.LightVector = 0;







	Parameters.TwoSidedSign = 1.0f;



























	{
		CalcPixelMaterialInputs(Parameters, PixelMaterialInputs);
	}
}

#line 3844 "/Engine/Generated/Material.ush"
void CalcMaterialParameters(
	in out FMaterialPixelParameters Parameters,
	in out FPixelMaterialInputs PixelMaterialInputs,
	float4 SvPosition,
	bool bIsFrontFace)
{
	float4 ScreenPosition = SvPositionToResolvedScreenPosition(SvPosition);
	float3 TranslatedWorldPosition = SvPositionToResolvedTranslatedWorld(SvPosition);

	CalcMaterialParametersEx(Parameters, PixelMaterialInputs, SvPosition, ScreenPosition, bIsFrontFace, TranslatedWorldPosition, TranslatedWorldPosition);
}

#line 27 "/Engine/Private/DebugViewModeCommon.ush"
struct FDebugPSIn
{
	float4 SvPosition : SV_POSITION;
	float4 VertexColor : TEXCOORD0;
	float4 TexCoord01 : TEXCOORD1;
	float4 TexCoord23 : TEXCOORD2;
	float3 TangentToWorld0 : TEXCOORD3;
	float3 TangentToWorld1 : TEXCOORD4;
	float3 TangentToWorld2 : TEXCOORD5;

	nointerpolation uint EyeIndex : EYE_INDEX;

	uint SvPrimitiveID : SV_PrimitiveID;
};

#line 60 "/Engine/Private/DebugViewModeCommon.ush"
FMaterialPixelParameters GetMaterialPixelParameters(FDebugPSIn DebugInputs, float4 SvPosition)
{
	
	FMaterialPixelParameters Result = MakeInitializedMaterialPixelParameters();

	Result.VertexColor = DebugInputs.VertexColor;

	Result.TangentToWorld = float3x3(float3(DebugInputs.TangentToWorld0), float3(DebugInputs.TangentToWorld1), float3(DebugInputs.TangentToWorld2));




















	Result.TwoSidedSign = 1;
	return Result;
}

#line 167 "/Engine/Private/DebugViewModePixelShader.usf"
float3 AccuracyColorLookup(float Accuracy)
{
	Accuracy = clamp(Accuracy, -1.99, 1.99);
	int ColorIndex = floor(Accuracy) + 2;
	float3 Color0 = DebugViewModePass_DebugViewMode_AccuracyColors[ColorIndex].rgb;
	float3 Color1 = DebugViewModePass_DebugViewMode_AccuracyColors[ColorIndex + 1].rgb;
	float ColorLerp = frac(Accuracy);
	return lerp(Color0, Color1, ColorLerp);
}

#line 177 "/Engine/Private/DebugViewModePixelShader.usf"
float GetCPUTexelFactor(int CoordIndex)
{
	[flatten]
		if (CoordIndex == 0) return CPUTexelFactor.x;
	[flatten]
		if (CoordIndex == 1) return CPUTexelFactor.y;
	[flatten]
		if (CoordIndex == 2) return CPUTexelFactor.z;
	return CPUTexelFactor.w;
}

#line 188 "/Engine/Private/DebugViewModePixelShader.usf"
float2 GetTexCoord(in FDebugPSIn Inputs, int CoordIndex)
{
	[flatten]
		if (CoordIndex == 0) return Inputs.TexCoord01.xy;
	[flatten]
		if (CoordIndex == 1) return Inputs.TexCoord01.zw;
	[flatten]
		if (CoordIndex == 2) return Inputs.TexCoord23.xy;
	return Inputs.TexCoord23.zw;
}

#line 199 "/Engine/Private/DebugViewModePixelShader.usf"
float GetTexCoordSizeAccuracy(in FDebugPSIn Inputs, int CoordIndex, float CPUSize)
{
	float3 WorldPosition = SvPositionToResolvedTranslatedWorld(Inputs.SvPosition);

	float2 TexCoord = GetTexCoord(Inputs, CoordIndex);


	float2 CoordDDX = ddx_fine(TexCoord);
	float2 CoordDDY = ddy_fine(TexCoord);
	float3 WorldPosDDX = ddx_fine(WorldPosition);
	float3 WorldPosDDY = ddy_fine(WorldPosition);







	float UVAera = abs(CoordDDX.x * CoordDDY.y - CoordDDX.y * CoordDDY.x);
	float WorldAera = length(cross(WorldPosDDX, WorldPosDDY));

	float GPUTexelFactor = sqrt(WorldAera / max(UVAera, 0.0000000001f));

	return clamp(log2(CPUSize) - log2(GPUTexelFactor), -1.99, 1.99);
}

#line 225 "/Engine/Private/DebugViewModePixelShader.usf"
float4 VisualizeMaterialTexCoordScales(in FDebugPSIn DebugInputs, in bool bIsFrontFace)
{
	
	float3 Result = float3(0.0149999997f, 0.0149999997f, 0.0149999997f);

	FTexCoordScalesParams Params;

	
	Params.PixelPosition = DebugInputs.SvPosition.xy;
	Params.OneOverDDU = 1 / float4(length(ddx(DebugInputs.TexCoord01.xy)), length(ddx(DebugInputs.TexCoord01.zw)), length(ddx(DebugInputs.TexCoord23.xy)), length(ddx(DebugInputs.TexCoord23.zw)));
	Params.OneOverDDV = 1 / float4(length(ddy(DebugInputs.TexCoord01.xy)), length(ddy(DebugInputs.TexCoord01.zw)), length(ddy(DebugInputs.TexCoord23.xy)), length(ddy(DebugInputs.TexCoord23.zw)));

	Params.TexSample = 1.f;
	Params.TexSampleAverage = 1.f;
	Params.MinScale = 256;
	Params.MaxScale = 0;
	Params.ScalesPerIndex = 256;
	Params.RequiredResolution = 0;
	Params.VTMissingMipCount = -1;

	FMaterialPixelParameters MaterialParameters = GetMaterialPixelParameters(DebugInputs, DebugInputs.SvPosition);

	
	[flatten]
		if ((AnalysisParams.y))
		{
#line 266 "/Engine/Private/DebugViewModePixelShader.usf"

		}

	float3 BaseColor;
	MaterialParameters.TexCoordScalesParams = Params;
	{
		FPixelMaterialInputs PixelMaterialInputs;
		CalcMaterialParameters(MaterialParameters, PixelMaterialInputs, DebugInputs.SvPosition, bIsFrontFace);

		
		BaseColor = GetMaterialBaseColorRaw(PixelMaterialInputs);
		float  Metallic = GetMaterialMetallicRaw(PixelMaterialInputs);
		float  Specular = GetMaterialSpecularRaw(PixelMaterialInputs);
		float Roughness = GetMaterialRoughnessRaw(PixelMaterialInputs);
		float3 Normal = GetMaterialNormalRaw(PixelMaterialInputs);
		float3 Emissive = GetMaterialEmissiveRaw(PixelMaterialInputs);
		float Opacity = GetMaterialOpacityRaw(PixelMaterialInputs);







		float4 SSData = GetMaterialSubsurfaceDataRaw(PixelMaterialInputs);
		float Custom0 = GetMaterialCustomData0(MaterialParameters);
		float Custom1 = GetMaterialCustomData1(MaterialParameters);
		float MaterialAO = GetMaterialAmbientOcclusionRaw(PixelMaterialInputs);
		float PixelDepthOffset = GetMaterialPixelDepthOffset(PixelMaterialInputs);



	}
	Params = MaterialParameters.TexCoordScalesParams;

	Result *= saturate(Luminance(BaseColor));

	float4 OutColor;
	if ((AnalysisParams.y))
	{
		
		OutColor = Params.ScalesPerIndex;
	}
	else
	{
		float PixelScale = ((Params.PixelPosition.x & 0x08) == (Params.PixelPosition.y & 0x08) || (AnalysisParams.x) != -1) ? Params.MinScale : Params.MaxScale;

		
		if (Params.MinScale != 256)
		{
			Params.TexSample = (AnalysisParams.x) == -1 ? lerp(.4f, 1.f, saturate(Luminance(BaseColor))) : Params.TexSample;

			float Accuracy = clamp(log2(PixelScale), -1.99, 1.99);
			int ColorIndex = floor(Accuracy) + 2;
			Result = Params.TexSample * lerp(DebugViewModePass_DebugViewMode_AccuracyColors[ColorIndex].rgb, DebugViewModePass_DebugViewMode_AccuracyColors[ColorIndex + 1].rgb, frac(Accuracy));
		}

		OutColor = float4(Result, PrimitiveAlpha);
	}
	return OutColor;
}

#line 328 "/Engine/Private/DebugViewModePixelShader.usf"
float4 VisualizeMeshTexCoordSizeAccuracy(in FDebugPSIn DebugInputs, in bool bIsFrontFace)
{
	float3 Result = float3(0.0149999997f, 0.0149999997f, 0.0149999997f);

	if (TexCoordAnalysisIndex >= 0)
	{
		float CPUSize = GetCPUTexelFactor(TexCoordAnalysisIndex);
		if (CPUSize > 0)
		{
			float Accuracy = GetTexCoordSizeAccuracy(DebugInputs, TexCoordAnalysisIndex, CPUSize);
			int ColorIndex = floor(Accuracy) + 2;
			Result = lerp(DebugViewModePass_DebugViewMode_AccuracyColors[ColorIndex].rgb, DebugViewModePass_DebugViewMode_AccuracyColors[ColorIndex + 1].rgb, frac(Accuracy));
		}
	}
	else
	{
		float MinAccuracy = 1024;
		float MaxAccuracy = -1024;

		[unroll]
		for (int CoordIndex = 0; CoordIndex < 4; ++CoordIndex)
		{
			float CPUSize = GetCPUTexelFactor(CoordIndex);
			if (CPUSize > 0)
			{
				float Accuracy = GetTexCoordSizeAccuracy(DebugInputs, CoordIndex, CPUSize);
				MinAccuracy = min(Accuracy, MinAccuracy);
				MaxAccuracy = max(Accuracy, MaxAccuracy);
			}
		}

		int2 PixelPosition = DebugInputs.SvPosition.xy;
		float Accuracy = (PixelPosition.x & 0x08) == (PixelPosition.y & 0x08) ? MinAccuracy : MaxAccuracy;

		if (abs(Accuracy) != 1024)
		{
			int ColorIndex = floor(Accuracy) + 2;
			Result = lerp(DebugViewModePass_DebugViewMode_AccuracyColors[ColorIndex].rgb, DebugViewModePass_DebugViewMode_AccuracyColors[ColorIndex + 1].rgb, frac(Accuracy));
		}
	}

	return float4(Result, PrimitiveAlpha);
}

#line 372 "/Engine/Private/DebugViewModePixelShader.usf"
float4 VisualizePrimitiveDistanceAccuracy(in FDebugPSIn DebugInputs, in bool bIsFrontFace)
{
	float3 Result = float3(0.0149999997f, 0.0149999997f, 0.0149999997f);

	if (CPULogDistance >= 0)
	{
		float ViewDistance = length(SvPositionToResolvedTranslatedWorld(DebugInputs.SvPosition));
		float GPULogDistance = log2(max(1, ViewDistance));

		float Accuracy = clamp(GPULogDistance - CPULogDistance, -1.99, 1.99);
		int ColorIndex = floor(Accuracy) + 2;

		Result = lerp(DebugViewModePass_DebugViewMode_AccuracyColors[ColorIndex].rgb, DebugViewModePass_DebugViewMode_AccuracyColors[ColorIndex + 1].rgb, frac(Accuracy));
	}

	return float4(Result, PrimitiveAlpha);
}

#line 390 "/Engine/Private/DebugViewModePixelShader.usf"
float4 VisualizeRequiredTextureResolution(in FDebugPSIn DebugInputs, in bool bIsFrontFace)
{
	FMaterialPixelParameters MaterialParameters = GetMaterialPixelParameters(DebugInputs, DebugInputs.SvPosition);

	MaterialParameters.TexCoordScalesParams.RequiredResolution = 0;
	MaterialParameters.TexCoordScalesParams.TexSample = 0;
	MaterialParameters.TexCoordScalesParams.VTMissingMipCount = -1;

	float3 BaseColor;
	{
		FPixelMaterialInputs PixelMaterialInputs;
		CalcMaterialParameters(MaterialParameters, PixelMaterialInputs, DebugInputs.SvPosition, bIsFrontFace);

		
		BaseColor = GetMaterialBaseColorRaw(PixelMaterialInputs);
		float  Metallic = GetMaterialMetallicRaw(PixelMaterialInputs);
		float  Specular = GetMaterialSpecularRaw(PixelMaterialInputs);
		float Roughness = GetMaterialRoughnessRaw(PixelMaterialInputs);
		float3 Normal = GetMaterialNormalRaw(PixelMaterialInputs);
		float3 Emissive = GetMaterialEmissiveRaw(PixelMaterialInputs);
		float Opacity = GetMaterialOpacityRaw(PixelMaterialInputs);




		float4 SSData = GetMaterialSubsurfaceDataRaw(PixelMaterialInputs);
		float Custom0 = GetMaterialCustomData0(MaterialParameters);
		float Custom1 = GetMaterialCustomData1(MaterialParameters);
		float MaterialAO = GetMaterialAmbientOcclusionRaw(PixelMaterialInputs);
		float PixelDepthOffset = GetMaterialPixelDepthOffset(PixelMaterialInputs);



	}

	float3 Result = float3(0.0149999997f, 0.0149999997f, 0.0149999997f);
	Result *= saturate(Luminance(BaseColor));

	if (VisualizeMode == 9)
	{
		if (MaterialParameters.TexCoordScalesParams.RequiredResolution > 0)
		{
			float Accuracy = log2((AnalysisParams.y) / MaterialParameters.TexCoordScalesParams.RequiredResolution);
			Result = AccuracyColorLookup(Accuracy);
			Result *= MaterialParameters.TexCoordScalesParams.TexSample;
		}
	}
	else if (VisualizeMode == 10)
	{
		if (MaterialParameters.TexCoordScalesParams.VTMissingMipCount >= 0)
		{
			float Accuracy = -MaterialParameters.TexCoordScalesParams.VTMissingMipCount;
			Result = AccuracyColorLookup(Accuracy);
			Result *= 0.5f;
		}
	}











	return float4(Result, PrimitiveAlpha);
}

#line 460 "/Engine/Private/DebugViewModePixelShader.usf"
float4 VisualizeShaderComplexityAccumulate(in FDebugPSIn DebugInputs, in bool bIsFrontFace)
{
	float3 Result = float3(1, 0, 1);
	if (bOutputQuadOverdraw)
	{
		float3 FinalComplexity = NormalizedComplexity.xyz;


		[branch]
		if (bShowQuadOverdraw && NormalizedComplexity.x > 0)
		{
			uint Coverage = ComputeQuadCoverage(DebugInputs.SvPosition.xy, DebugInputs.SvPrimitiveID, 24, false, false, 0);
			
			FinalComplexity.x *= 4.f / (float)(Coverage);
		}


		
		Result = FinalComplexity;
	}
	else
	{
		Result = NormalizedComplexity.xyz;
	}

	
	return float4(Result, 1);
}

#line 489 "/Engine/Private/DebugViewModePixelShader.usf"
float4 ApplyDebugColor(in FDebugPSIn DebugInputs, in bool bIsFrontFace, in float3 DebugColor)
{
	float3 Result = DebugColor;

	FMaterialPixelParameters MaterialParameters = GetMaterialPixelParameters(DebugInputs, DebugInputs.SvPosition);

	float3 BaseColor;
	float Opacity;
	{
		FPixelMaterialInputs PixelMaterialInputs;
		CalcMaterialParameters(MaterialParameters, PixelMaterialInputs, DebugInputs.SvPosition, bIsFrontFace);

		
		BaseColor = GetMaterialBaseColorRaw(PixelMaterialInputs);
		Opacity = GetMaterialOpacityRaw(PixelMaterialInputs);

		float3 Emissive = GetMaterialEmissiveRaw(PixelMaterialInputs);



		BaseColor += Emissive;





	}

	Result *= (.05 + .95 * Luminance(BaseColor));











	return float4(Result, Opacity);
}

#line 532 "/Engine/Private/DebugViewModePixelShader.usf"
float4 VisualizeLODColoration(in FDebugPSIn DebugInputs, in bool bIsFrontFace)
{
	float3 Color = DebugViewModePass_DebugViewMode_LODColors[LODIndex].rgb;
	return ApplyDebugColor(DebugInputs, bIsFrontFace, Color);
}

#line 538 "/Engine/Private/DebugViewModePixelShader.usf"
float4 VisualizeGPUSkinCache(in FDebugPSIn DebugInputs, in bool bIsFrontFace)
{
	return ApplyDebugColor(DebugInputs, bIsFrontFace, SkinCacheDebugColor);
}

#line 549 "/Engine/Private/DebugViewModePixelShader.usf"
[earlydepthstencil]
void Main(
	in FDebugPSIn DebugInputs
	, in bool bIsFrontFace : SV_IsFrontFace,
	out float4 OutColor : SV_Target0
	)
{

	ResolvedView = ResolveView(DebugInputs.EyeIndex);




	
	float4 VisualizeColor = float4(1, 0, 1, 1);

	[branch]
	if (VisualizeMode == 1 ||
		VisualizeMode == 2 ||
		VisualizeMode == 3 ||
		VisualizeMode == 4)
	{
		VisualizeColor = VisualizeShaderComplexityAccumulate(DebugInputs, bIsFrontFace);
	}
	else if (VisualizeMode == 5)
	{
		VisualizeColor = VisualizePrimitiveDistanceAccuracy(DebugInputs, bIsFrontFace);
	}
	else if (VisualizeMode == 6)
	{
		VisualizeColor = VisualizeMeshTexCoordSizeAccuracy(DebugInputs, bIsFrontFace);
	}
	else if (VisualizeMode == 7 ||
			 VisualizeMode == 8)
	{
		VisualizeColor = VisualizeMaterialTexCoordScales(DebugInputs, bIsFrontFace);
	}
	else if (VisualizeMode == 9 ||
			 VisualizeMode == 10)
	{
		VisualizeColor = VisualizeRequiredTextureResolution(DebugInputs, bIsFrontFace);
	}
	else if (VisualizeMode == 11)
	{
		VisualizeColor = VisualizeLODColoration(DebugInputs, bIsFrontFace);
	}
	else if (VisualizeMode == 12)
	{
		VisualizeColor = VisualizeGPUSkinCache(DebugInputs, bIsFrontFace);
	}

	OutColor =  ( VisualizeColor );	
}



#if 0 /*BEGIN_RESOURCE_TABLES*/
View, 376963194
Strata, 158337041
DrawRectangleParameters, 3145984
InstancedView, 450888449
Primitive, 50331904
MobileBasePass, 118234733
DebugViewModePass, 139791172
BasePass, 148439296
MobileReflectionCapture, 2425088
InstanceVF, 104204038
SingleLayerWater, 1641252
PrimitiveDither, 1048832
PrimitiveFade, 1048832
DeferredDecal, 2097668
SceneTexturesStruct, 158338568
MobileSceneTextures, 147131313
Scene, 273683233
InstanceCulling, 3146265
SpeedTreeData, 39846144
Atmosphere, 11534592
BlueNoise, 3473677
OpaqueBasePass, 159911720
DebugViewModeStruct, 13631744
PrecomputedLightingBuffer, 15728896
ShaderPrintData, 5243136
LocalVFLooseParameters, 2490654
LocalVF, 105252632
InstancedVFLooseParameters, 6291712
Material, 3670272
NULL, 0
View_MaterialTextureBilinearWrapedSampler, View, 8, 0
View_MaterialTextureBilinearClampedSampler, View, 8, 1
View_VolumetricLightmapIndirectionTexture, View, 5, 2
View_VolumetricLightmapBrickAmbientVector, View, 5, 3
View_VolumetricLightmapBrickSHCoefficients0, View, 5, 4
View_VolumetricLightmapBrickSHCoefficients1, View, 5, 5
View_VolumetricLightmapBrickSHCoefficients2, View, 5, 6
View_VolumetricLightmapBrickSHCoefficients3, View, 5, 7
View_VolumetricLightmapBrickSHCoefficients4, View, 5, 8
View_VolumetricLightmapBrickSHCoefficients5, View, 5, 9
View_SkyBentNormalBrickTexture, View, 5, 10
View_DirectionalLightShadowingBrickTexture, View, 5, 11
View_VolumetricLightmapBrickAmbientVectorSampler, View, 8, 12
View_VolumetricLightmapTextureSampler0, View, 8, 13
View_VolumetricLightmapTextureSampler1, View, 8, 14
View_VolumetricLightmapTextureSampler2, View, 8, 15
View_VolumetricLightmapTextureSampler3, View, 8, 16
View_VolumetricLightmapTextureSampler4, View, 8, 17
View_VolumetricLightmapTextureSampler5, View, 8, 18
View_SkyBentNormalTextureSampler, View, 8, 19
View_DirectionalLightShadowingTextureSampler, View, 8, 20
View_GlobalDistanceFieldPageAtlasTexture, View, 5, 21
View_GlobalDistanceFieldCoverageAtlasTexture, View, 5, 22
View_GlobalDistanceFieldPageTableTexture, View, 5, 23
View_GlobalDistanceFieldMipTexture, View, 5, 24
View_GlobalDistanceFieldPageAtlasTextureSampler, View, 8, 25
View_GlobalDistanceFieldCoverageAtlasTextureSampler, View, 8, 26
View_GlobalDistanceFieldMipTextureSampler, View, 8, 27
View_AtmosphereTransmittanceTexture, View, 5, 28
View_AtmosphereTransmittanceTextureSampler, View, 8, 29
View_AtmosphereIrradianceTexture, View, 5, 30
View_AtmosphereIrradianceTextureSampler, View, 8, 31
View_AtmosphereInscatterTexture, View, 5, 32
View_AtmosphereInscatterTextureSampler, View, 8, 33
View_PerlinNoiseGradientTexture, View, 5, 34
View_PerlinNoiseGradientTextureSampler, View, 8, 35
View_PerlinNoise3DTexture, View, 5, 36
View_PerlinNoise3DTextureSampler, View, 8, 37
View_SobolSamplingTexture, View, 5, 38
View_SharedPointWrappedSampler, View, 8, 39
View_SharedPointClampedSampler, View, 8, 40
View_SharedBilinearWrappedSampler, View, 8, 41
View_SharedBilinearClampedSampler, View, 8, 42
View_SharedBilinearAnisoClampedSampler, View, 8, 43
View_SharedTrilinearWrappedSampler, View, 8, 44
View_SharedTrilinearClampedSampler, View, 8, 45
View_PreIntegratedBRDF, View, 5, 46
View_PreIntegratedBRDFSampler, View, 8, 47
View_SkyIrradianceEnvironmentMap, View, 6, 48
View_TransmittanceLutTexture, View, 5, 49
View_TransmittanceLutTextureSampler, View, 8, 50
View_SkyViewLutTexture, View, 5, 51
View_SkyViewLutTextureSampler, View, 8, 52
View_DistantSkyLightLutTexture, View, 5, 53
View_DistantSkyLightLutTextureSampler, View, 8, 54
View_CameraAerialPerspectiveVolume, View, 5, 55
View_CameraAerialPerspectiveVolumeSampler, View, 8, 56
View_CameraAerialPerspectiveVolumeMieOnly, View, 5, 57
View_CameraAerialPerspectiveVolumeMieOnlySampler, View, 8, 58
View_CameraAerialPerspectiveVolumeRayOnly, View, 5, 59
View_CameraAerialPerspectiveVolumeRayOnlySampler, View, 8, 60
View_HairScatteringLUTTexture, View, 5, 61
View_HairScatteringLUTSampler, View, 8, 62
View_GGXLTCMatTexture, View, 5, 63
View_GGXLTCMatSampler, View, 8, 64
View_GGXLTCAmpTexture, View, 5, 65
View_GGXLTCAmpSampler, View, 8, 66
View_SheenLTCTexture, View, 5, 67
View_SheenLTCSampler, View, 8, 68
View_ShadingEnergyGGXSpecTexture, View, 5, 69
View_ShadingEnergyGGXGlassTexture, View, 5, 70
View_ShadingEnergyClothSpecTexture, View, 5, 71
View_ShadingEnergyDiffuseTexture, View, 5, 72
View_ShadingEnergySampler, View, 8, 73
View_GlintTexture, View, 5, 74
View_GlintSampler, View, 8, 75
View_SimpleVolumeTexture, View, 5, 76
View_SimpleVolumeTextureSampler, View, 8, 77
View_SimpleVolumeEnvTexture, View, 5, 78
View_SimpleVolumeEnvTextureSampler, View, 8, 79
View_SSProfilesTexture, View, 5, 80
View_SSProfilesSampler, View, 8, 81
View_SSProfilesTransmissionSampler, View, 8, 82
View_SSProfilesPreIntegratedTexture, View, 5, 83
View_SSProfilesPreIntegratedSampler, View, 8, 84
View_SpecularProfileTexture, View, 5, 85
View_SpecularProfileSampler, View, 8, 86
View_WaterIndirection, View, 6, 87
View_WaterData, View, 6, 88
View_RectLightAtlasTexture, View, 5, 89
View_RectLightAtlasSampler, View, 8, 90
View_IESAtlasTexture, View, 5, 91
View_IESAtlasSampler, View, 8, 92
View_LandscapeWeightmapSampler, View, 8, 93
View_LandscapeIndirection, View, 6, 94
View_LandscapePerComponentData, View, 6, 95
View_VTFeedbackBuffer, View, 7, 96
View_PhysicsFieldClipmapBuffer, View, 6, 97
Strata_MaterialTextureArray, Strata, 9, 0
Strata_TopLayerTexture, Strata, 9, 1
Strata_OpaqueRoughRefractionTexture, Strata, 9, 2
Strata_BSDFOffsetTexture, Strata, 9, 3
Strata_BSDFTileTexture, Strata, 9, 4
Strata_BSDFTileCountBuffer, Strata, 16, 5
MobileBasePass_Fog_FogInscatteringColorCubemap, MobileBasePass, 5, 0
MobileBasePass_Fog_FogInscatteringColorSampler, MobileBasePass, 8, 1
MobileBasePass_Fog_IntegratedLightScattering, MobileBasePass, 9, 2
MobileBasePass_Fog_IntegratedLightScatteringSampler, MobileBasePass, 8, 3
MobileBasePass_Forward_DirectionalLightShadowmapAtlas, MobileBasePass, 9, 4
MobileBasePass_Forward_ShadowmapSampler, MobileBasePass, 8, 5
MobileBasePass_Forward_DirectionalLightStaticShadowmap, MobileBasePass, 5, 6
MobileBasePass_Forward_StaticShadowmapSampler, MobileBasePass, 8, 7
MobileBasePass_Forward_ForwardLocalLightBuffer, MobileBasePass, 16, 8
MobileBasePass_Forward_NumCulledLightsGrid, MobileBasePass, 16, 9
MobileBasePass_Forward_CulledLightDataGrid32Bit, MobileBasePass, 16, 10
MobileBasePass_Forward_CulledLightDataGrid16Bit, MobileBasePass, 16, 11
MobileBasePass_ForwardMMV_DirectionalLightShadowmapAtlas, MobileBasePass, 9, 12
MobileBasePass_ForwardMMV_ShadowmapSampler, MobileBasePass, 8, 13
MobileBasePass_ForwardMMV_DirectionalLightStaticShadowmap, MobileBasePass, 5, 14
MobileBasePass_ForwardMMV_StaticShadowmapSampler, MobileBasePass, 8, 15
MobileBasePass_ForwardMMV_ForwardLocalLightBuffer, MobileBasePass, 16, 16
MobileBasePass_ForwardMMV_NumCulledLightsGrid, MobileBasePass, 16, 17
MobileBasePass_ForwardMMV_CulledLightDataGrid32Bit, MobileBasePass, 16, 18
MobileBasePass_ForwardMMV_CulledLightDataGrid16Bit, MobileBasePass, 16, 19
MobileBasePass_PlanarReflection_PlanarReflectionTexture, MobileBasePass, 5, 20
MobileBasePass_PlanarReflection_PlanarReflectionSampler, MobileBasePass, 8, 21
MobileBasePass_SceneTextures_SceneColorTexture, MobileBasePass, 9, 22
MobileBasePass_SceneTextures_SceneColorTextureSampler, MobileBasePass, 8, 23
MobileBasePass_SceneTextures_SceneDepthTexture, MobileBasePass, 9, 24
MobileBasePass_SceneTextures_SceneDepthTextureSampler, MobileBasePass, 8, 25
MobileBasePass_SceneTextures_ScenePartialDepthTexture, MobileBasePass, 9, 26
MobileBasePass_SceneTextures_ScenePartialDepthTextureSampler, MobileBasePass, 8, 27
MobileBasePass_SceneTextures_CustomDepthTexture, MobileBasePass, 9, 28
MobileBasePass_SceneTextures_CustomDepthTextureSampler, MobileBasePass, 8, 29
MobileBasePass_SceneTextures_CustomStencilTexture, MobileBasePass, 12, 30
MobileBasePass_SceneTextures_SceneVelocityTexture, MobileBasePass, 9, 31
MobileBasePass_SceneTextures_SceneVelocityTextureSampler, MobileBasePass, 8, 32
MobileBasePass_SceneTextures_GBufferATexture, MobileBasePass, 9, 33
MobileBasePass_SceneTextures_GBufferBTexture, MobileBasePass, 9, 34
MobileBasePass_SceneTextures_GBufferCTexture, MobileBasePass, 9, 35
MobileBasePass_SceneTextures_GBufferDTexture, MobileBasePass, 9, 36
MobileBasePass_SceneTextures_SceneDepthAuxTexture, MobileBasePass, 9, 37
MobileBasePass_SceneTextures_LocalLightTextureA, MobileBasePass, 9, 38
MobileBasePass_SceneTextures_LocalLightTextureB, MobileBasePass, 9, 39
MobileBasePass_SceneTextures_GBufferATextureSampler, MobileBasePass, 8, 40
MobileBasePass_SceneTextures_GBufferBTextureSampler, MobileBasePass, 8, 41
MobileBasePass_SceneTextures_GBufferCTextureSampler, MobileBasePass, 8, 42
MobileBasePass_SceneTextures_GBufferDTextureSampler, MobileBasePass, 8, 43
MobileBasePass_SceneTextures_SceneDepthAuxTextureSampler, MobileBasePass, 8, 44
MobileBasePass_QuadOverdraw, MobileBasePass, 13, 45
MobileBasePass_ReflectionsParameters_SkyLightCubemap, MobileBasePass, 9, 46
MobileBasePass_ReflectionsParameters_SkyLightCubemapSampler, MobileBasePass, 8, 47
MobileBasePass_ReflectionsParameters_SkyLightBlendDestinationCubemap, MobileBasePass, 5, 48
MobileBasePass_ReflectionsParameters_SkyLightBlendDestinationCubemapSampler, MobileBasePass, 8, 49
MobileBasePass_ReflectionsParameters_ReflectionCubemap, MobileBasePass, 5, 50
MobileBasePass_ReflectionsParameters_ReflectionCubemapSampler, MobileBasePass, 8, 51
MobileBasePass_ReflectionsParameters_PreIntegratedGF, MobileBasePass, 5, 52
MobileBasePass_ReflectionsParameters_PreIntegratedGFSampler, MobileBasePass, 8, 53
MobileBasePass_PreIntegratedGFTexture, MobileBasePass, 5, 54
MobileBasePass_PreIntegratedGFSampler, MobileBasePass, 8, 55
MobileBasePass_EyeAdaptationBuffer, MobileBasePass, 16, 56
MobileBasePass_RWOcclusionBufferUAV, MobileBasePass, 17, 57
MobileBasePass_AmbientOcclusionTexture, MobileBasePass, 9, 58
MobileBasePass_AmbientOcclusionSampler, MobileBasePass, 8, 59
MobileBasePass_ScreenSpaceShadowMaskTexture, MobileBasePass, 9, 60
MobileBasePass_ScreenSpaceShadowMaskSampler, MobileBasePass, 8, 61
DebugViewModePass_SceneTextures_SceneColorTexture, DebugViewModePass, 9, 0
DebugViewModePass_SceneTextures_SceneDepthTexture, DebugViewModePass, 9, 1
DebugViewModePass_SceneTextures_ScenePartialDepthTexture, DebugViewModePass, 9, 2
DebugViewModePass_SceneTextures_GBufferATexture, DebugViewModePass, 9, 3
DebugViewModePass_SceneTextures_GBufferBTexture, DebugViewModePass, 9, 4
DebugViewModePass_SceneTextures_GBufferCTexture, DebugViewModePass, 9, 5
DebugViewModePass_SceneTextures_GBufferDTexture, DebugViewModePass, 9, 6
DebugViewModePass_SceneTextures_GBufferETexture, DebugViewModePass, 9, 7
DebugViewModePass_SceneTextures_GBufferFTexture, DebugViewModePass, 9, 8
DebugViewModePass_SceneTextures_GBufferVelocityTexture, DebugViewModePass, 9, 9
DebugViewModePass_SceneTextures_ScreenSpaceAOTexture, DebugViewModePass, 9, 10
DebugViewModePass_SceneTextures_CustomDepthTexture, DebugViewModePass, 9, 11
DebugViewModePass_SceneTextures_CustomStencilTexture, DebugViewModePass, 12, 12
DebugViewModePass_SceneTextures_PointClampSampler, DebugViewModePass, 8, 13
DebugViewModePass_QuadOverdraw, DebugViewModePass, 13, 14
BasePass_Forward_DirectionalLightShadowmapAtlas, BasePass, 9, 0
BasePass_Forward_ShadowmapSampler, BasePass, 8, 1
BasePass_Forward_DirectionalLightStaticShadowmap, BasePass, 5, 2
BasePass_Forward_StaticShadowmapSampler, BasePass, 8, 3
BasePass_Forward_ForwardLocalLightBuffer, BasePass, 16, 4
BasePass_Forward_NumCulledLightsGrid, BasePass, 16, 5
BasePass_Forward_CulledLightDataGrid32Bit, BasePass, 16, 6
BasePass_Forward_CulledLightDataGrid16Bit, BasePass, 16, 7
BasePass_ForwardISR_DirectionalLightShadowmapAtlas, BasePass, 9, 8
BasePass_ForwardISR_ShadowmapSampler, BasePass, 8, 9
BasePass_ForwardISR_DirectionalLightStaticShadowmap, BasePass, 5, 10
BasePass_ForwardISR_StaticShadowmapSampler, BasePass, 8, 11
BasePass_ForwardISR_ForwardLocalLightBuffer, BasePass, 16, 12
BasePass_ForwardISR_NumCulledLightsGrid, BasePass, 16, 13
BasePass_ForwardISR_CulledLightDataGrid32Bit, BasePass, 16, 14
BasePass_ForwardISR_CulledLightDataGrid16Bit, BasePass, 16, 15
BasePass_Reflection_SkyLightCubemap, BasePass, 9, 16
BasePass_Reflection_SkyLightCubemapSampler, BasePass, 8, 17
BasePass_Reflection_SkyLightBlendDestinationCubemap, BasePass, 5, 18
BasePass_Reflection_SkyLightBlendDestinationCubemapSampler, BasePass, 8, 19
BasePass_Reflection_ReflectionCubemap, BasePass, 5, 20
BasePass_Reflection_ReflectionCubemapSampler, BasePass, 8, 21
BasePass_Reflection_PreIntegratedGF, BasePass, 5, 22
BasePass_Reflection_PreIntegratedGFSampler, BasePass, 8, 23
BasePass_PlanarReflection_PlanarReflectionTexture, BasePass, 5, 24
BasePass_PlanarReflection_PlanarReflectionSampler, BasePass, 8, 25
BasePass_Fog_FogInscatteringColorCubemap, BasePass, 5, 26
BasePass_Fog_FogInscatteringColorSampler, BasePass, 8, 27
BasePass_Fog_IntegratedLightScattering, BasePass, 9, 28
BasePass_Fog_IntegratedLightScatteringSampler, BasePass, 8, 29
BasePass_FogISR_FogInscatteringColorCubemap, BasePass, 5, 30
BasePass_FogISR_FogInscatteringColorSampler, BasePass, 8, 31
BasePass_FogISR_IntegratedLightScattering, BasePass, 9, 32
BasePass_FogISR_IntegratedLightScatteringSampler, BasePass, 8, 33
MobileReflectionCapture_Texture, MobileReflectionCapture, 5, 0
MobileReflectionCapture_TextureSampler, MobileReflectionCapture, 8, 1
InstanceVF_VertexFetch_InstanceOriginBuffer, InstanceVF, 6, 0
InstanceVF_VertexFetch_InstanceTransformBuffer, InstanceVF, 6, 1
InstanceVF_VertexFetch_InstanceLightmapBuffer, InstanceVF, 6, 2
InstanceVF_InstanceCustomDataBuffer, InstanceVF, 6, 3
SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture, SingleLayerWater, 9, 0
SingleLayerWater_SceneColorWithoutSingleLayerWaterSampler, SingleLayerWater, 8, 1
SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture, SingleLayerWater, 9, 2
SingleLayerWater_SceneDepthWithoutSingleLayerWaterSampler, SingleLayerWater, 8, 3
SingleLayerWater_CustomDepthTexture, SingleLayerWater, 9, 4
SingleLayerWater_CustomStencilTexture, SingleLayerWater, 12, 5
SingleLayerWater_CustomDepthSampler, SingleLayerWater, 8, 6
SingleLayerWater_ForwardDirLightCloudShadow_CloudShadowmapTexture, SingleLayerWater, 9, 7
SingleLayerWater_ForwardDirLightCloudShadow_CloudShadowmapSampler, SingleLayerWater, 8, 8
SingleLayerWater_BlueNoise_ScalarTexture, SingleLayerWater, 5, 9
SingleLayerWater_BlueNoise_Vec2Texture, SingleLayerWater, 5, 10
DeferredDecal_PreviousFrameNormal, DeferredDecal, 5, 0
SceneTexturesStruct_SceneColorTexture, SceneTexturesStruct, 9, 0
SceneTexturesStruct_SceneDepthTexture, SceneTexturesStruct, 9, 1
SceneTexturesStruct_ScenePartialDepthTexture, SceneTexturesStruct, 9, 2
SceneTexturesStruct_GBufferATexture, SceneTexturesStruct, 9, 3
SceneTexturesStruct_GBufferBTexture, SceneTexturesStruct, 9, 4
SceneTexturesStruct_GBufferCTexture, SceneTexturesStruct, 9, 5
SceneTexturesStruct_GBufferDTexture, SceneTexturesStruct, 9, 6
SceneTexturesStruct_GBufferETexture, SceneTexturesStruct, 9, 7
SceneTexturesStruct_GBufferFTexture, SceneTexturesStruct, 9, 8
SceneTexturesStruct_GBufferVelocityTexture, SceneTexturesStruct, 9, 9
SceneTexturesStruct_ScreenSpaceAOTexture, SceneTexturesStruct, 9, 10
SceneTexturesStruct_CustomDepthTexture, SceneTexturesStruct, 9, 11
SceneTexturesStruct_CustomStencilTexture, SceneTexturesStruct, 12, 12
SceneTexturesStruct_PointClampSampler, SceneTexturesStruct, 8, 13
MobileSceneTextures_SceneColorTexture, MobileSceneTextures, 9, 0
MobileSceneTextures_SceneColorTextureSampler, MobileSceneTextures, 8, 1
MobileSceneTextures_SceneDepthTexture, MobileSceneTextures, 9, 2
MobileSceneTextures_SceneDepthTextureSampler, MobileSceneTextures, 8, 3
MobileSceneTextures_ScenePartialDepthTexture, MobileSceneTextures, 9, 4
MobileSceneTextures_ScenePartialDepthTextureSampler, MobileSceneTextures, 8, 5
MobileSceneTextures_CustomDepthTexture, MobileSceneTextures, 9, 6
MobileSceneTextures_CustomDepthTextureSampler, MobileSceneTextures, 8, 7
MobileSceneTextures_CustomStencilTexture, MobileSceneTextures, 12, 8
MobileSceneTextures_SceneVelocityTexture, MobileSceneTextures, 9, 9
MobileSceneTextures_SceneVelocityTextureSampler, MobileSceneTextures, 8, 10
MobileSceneTextures_GBufferATexture, MobileSceneTextures, 9, 11
MobileSceneTextures_GBufferBTexture, MobileSceneTextures, 9, 12
MobileSceneTextures_GBufferCTexture, MobileSceneTextures, 9, 13
MobileSceneTextures_GBufferDTexture, MobileSceneTextures, 9, 14
MobileSceneTextures_SceneDepthAuxTexture, MobileSceneTextures, 9, 15
MobileSceneTextures_LocalLightTextureA, MobileSceneTextures, 9, 16
MobileSceneTextures_LocalLightTextureB, MobileSceneTextures, 9, 17
MobileSceneTextures_GBufferATextureSampler, MobileSceneTextures, 8, 18
MobileSceneTextures_GBufferBTextureSampler, MobileSceneTextures, 8, 19
MobileSceneTextures_GBufferCTextureSampler, MobileSceneTextures, 8, 20
MobileSceneTextures_GBufferDTextureSampler, MobileSceneTextures, 8, 21
MobileSceneTextures_SceneDepthAuxTextureSampler, MobileSceneTextures, 8, 22
Scene_GPUScene_GPUSceneInstanceSceneData, Scene, 16, 0
Scene_GPUScene_GPUSceneInstancePayloadData, Scene, 16, 1
Scene_GPUScene_GPUScenePrimitiveSceneData, Scene, 16, 2
Scene_GPUScene_GPUSceneLightmapData, Scene, 16, 3
Scene_GPUScene_GPUSceneLightData, Scene, 16, 4
InstanceCulling_InstanceIdsBuffer, InstanceCulling, 16, 0
InstanceCulling_PageInfoBuffer, InstanceCulling, 16, 1
BlueNoise_ScalarTexture, BlueNoise, 5, 0
BlueNoise_Vec2Texture, BlueNoise, 5, 1
OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas, OpaqueBasePass, 9, 0
OpaqueBasePass_Shared_Forward_ShadowmapSampler, OpaqueBasePass, 8, 1
OpaqueBasePass_Shared_Forward_DirectionalLightStaticShadowmap, OpaqueBasePass, 5, 2
OpaqueBasePass_Shared_Forward_StaticShadowmapSampler, OpaqueBasePass, 8, 3
OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer, OpaqueBasePass, 16, 4
OpaqueBasePass_Shared_Forward_NumCulledLightsGrid, OpaqueBasePass, 16, 5
OpaqueBasePass_Shared_Forward_CulledLightDataGrid32Bit, OpaqueBasePass, 16, 6
OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit, OpaqueBasePass, 16, 7
OpaqueBasePass_Shared_ForwardISR_DirectionalLightShadowmapAtlas, OpaqueBasePass, 9, 8
OpaqueBasePass_Shared_ForwardISR_ShadowmapSampler, OpaqueBasePass, 8, 9
OpaqueBasePass_Shared_ForwardISR_DirectionalLightStaticShadowmap, OpaqueBasePass, 5, 10
OpaqueBasePass_Shared_ForwardISR_StaticShadowmapSampler, OpaqueBasePass, 8, 11
OpaqueBasePass_Shared_ForwardISR_ForwardLocalLightBuffer, OpaqueBasePass, 16, 12
OpaqueBasePass_Shared_ForwardISR_NumCulledLightsGrid, OpaqueBasePass, 16, 13
OpaqueBasePass_Shared_ForwardISR_CulledLightDataGrid32Bit, OpaqueBasePass, 16, 14
OpaqueBasePass_Shared_ForwardISR_CulledLightDataGrid16Bit, OpaqueBasePass, 16, 15
OpaqueBasePass_Shared_Reflection_SkyLightCubemap, OpaqueBasePass, 9, 16
OpaqueBasePass_Shared_Reflection_SkyLightCubemapSampler, OpaqueBasePass, 8, 17
OpaqueBasePass_Shared_Reflection_SkyLightBlendDestinationCubemap, OpaqueBasePass, 5, 18
OpaqueBasePass_Shared_Reflection_SkyLightBlendDestinationCubemapSampler, OpaqueBasePass, 8, 19
OpaqueBasePass_Shared_Reflection_ReflectionCubemap, OpaqueBasePass, 5, 20
OpaqueBasePass_Shared_Reflection_ReflectionCubemapSampler, OpaqueBasePass, 8, 21
OpaqueBasePass_Shared_Reflection_PreIntegratedGF, OpaqueBasePass, 5, 22
OpaqueBasePass_Shared_Reflection_PreIntegratedGFSampler, OpaqueBasePass, 8, 23
OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionTexture, OpaqueBasePass, 5, 24
OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionSampler, OpaqueBasePass, 8, 25
OpaqueBasePass_Shared_Fog_FogInscatteringColorCubemap, OpaqueBasePass, 5, 26
OpaqueBasePass_Shared_Fog_FogInscatteringColorSampler, OpaqueBasePass, 8, 27
OpaqueBasePass_Shared_Fog_IntegratedLightScattering, OpaqueBasePass, 9, 28
OpaqueBasePass_Shared_Fog_IntegratedLightScatteringSampler, OpaqueBasePass, 8, 29
OpaqueBasePass_Shared_FogISR_FogInscatteringColorCubemap, OpaqueBasePass, 5, 30
OpaqueBasePass_Shared_FogISR_FogInscatteringColorSampler, OpaqueBasePass, 8, 31
OpaqueBasePass_Shared_FogISR_IntegratedLightScattering, OpaqueBasePass, 9, 32
OpaqueBasePass_Shared_FogISR_IntegratedLightScatteringSampler, OpaqueBasePass, 8, 33
OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs, OpaqueBasePass, 13, 34
OpaqueBasePass_Strata_OpaqueRoughRefractionTextureUAV, OpaqueBasePass, 13, 35
OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture, OpaqueBasePass, 9, 36
OpaqueBasePass_IndirectOcclusionTexture, OpaqueBasePass, 9, 37
OpaqueBasePass_ResolvedSceneDepthTexture, OpaqueBasePass, 9, 38
OpaqueBasePass_DBufferATexture, OpaqueBasePass, 9, 39
OpaqueBasePass_DBufferBTexture, OpaqueBasePass, 9, 40
OpaqueBasePass_DBufferCTexture, OpaqueBasePass, 9, 41
OpaqueBasePass_DBufferRenderMask, OpaqueBasePass, 9, 42
OpaqueBasePass_DBufferATextureSampler, OpaqueBasePass, 8, 43
OpaqueBasePass_DBufferBTextureSampler, OpaqueBasePass, 8, 44
OpaqueBasePass_DBufferCTextureSampler, OpaqueBasePass, 8, 45
OpaqueBasePass_PreIntegratedGFTexture, OpaqueBasePass, 5, 46
OpaqueBasePass_PreIntegratedGFSampler, OpaqueBasePass, 8, 47
OpaqueBasePass_EyeAdaptationBuffer, OpaqueBasePass, 16, 48
LocalVFLooseParameters_GPUSkinPassThroughPositionBuffer, LocalVFLooseParameters, 6, 0
LocalVFLooseParameters_GPUSkinPassThroughPreviousPositionBuffer, LocalVFLooseParameters, 6, 1
LocalVF_VertexFetch_TexCoordBuffer, LocalVF, 6, 0
LocalVF_VertexFetch_PositionBuffer, LocalVF, 6, 1
LocalVF_VertexFetch_PreSkinPositionBuffer, LocalVF, 6, 2
LocalVF_VertexFetch_PackedTangentsBuffer, LocalVF, 6, 3
LocalVF_VertexFetch_ColorComponentsBuffer, LocalVF, 6, 4
Material_Wrap_WorldGroupSettings, Material, 8, 0
Material_Clamp_WorldGroupSettings, Material, 8, 1
NULL, NULL, 0, 0
#endif /*END_RESOURCE_TABLES*/
#if 0 /*DIRECT COMPILE*/
-directcompile -format=PCD3D_SM5 -entry=Main -shaderPlatformName=PCD3D_SM5 -ps M:/Unreal Projects/Tradeshow/VRGK_Multiplayer/Saved/ShaderDebugInfo/PCD3D_SM5/CustomDepthWorldUnits_a1aff091a877c639/Default/FLocalVertexFactory/FDebugViewModePS/0/DebugViewModePixelShader.usf -cflags=8589938688 -nocrashreports
#endif /*DIRECT COMPILE*/
